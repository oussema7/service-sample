/*
 * Arrangement Manager Service API
 * This API allows other DBS services to operate on products
 *
 * The version of the OpenAPI document: 2.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.arrangement.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.arrangement.service.api.listener.v2.model.AdditionalProperties;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Item used to identify an arrangement
 */
@ApiModel(description = "Item used to identify an arrangement")
@JsonPropertyOrder({
  AccountArrangementsDeleteItem.JSON_PROPERTY_SELECTOR,
  AccountArrangementsDeleteItem.JSON_PROPERTY_VALUE
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:30:51.050595100+01:00[Africa/Tunis]")
public  class AccountArrangementsDeleteItem extends AdditionalProperties {
  /**
   * Selector used to identify the arrangement
   */
  public enum SelectorEnum {
    ID("ID"),
    
    EXTERNAL_ID("EXTERNAL_ID");

    private String value;

    SelectorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SelectorEnum fromValue(String value) {
      for (SelectorEnum b : SelectorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SELECTOR = "selector";
  private SelectorEnum selector;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;


  public AccountArrangementsDeleteItem selector(SelectorEnum selector) {
    
    this.selector = selector;
    return this;
  }

   /**
   * Selector used to identify the arrangement
   * @return selector
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Selector used to identify the arrangement")
  @JsonProperty(JSON_PROPERTY_SELECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SelectorEnum getSelector() {
    return selector;
  }


  public void setSelector(SelectorEnum selector) {
    this.selector = selector;
  }


  public AccountArrangementsDeleteItem value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Value of the selector
   * @return value
  **/
  @NotNull
 @Size(min=1)  @ApiModelProperty(required = true, value = "Value of the selector")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountArrangementsDeleteItem accountArrangementsDeleteItem = (AccountArrangementsDeleteItem) o;
    return Objects.equals(this.selector, accountArrangementsDeleteItem.selector) &&
        Objects.equals(this.value, accountArrangementsDeleteItem.value) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(selector, value, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountArrangementsDeleteItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

