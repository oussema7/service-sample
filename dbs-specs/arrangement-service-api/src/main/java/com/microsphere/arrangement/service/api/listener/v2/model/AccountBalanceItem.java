/*
 * Arrangement Manager Service API
 * This API allows other DBS services to operate on products
 *
 * The version of the OpenAPI document: 2.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.arrangement.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.arrangement.service.api.listener.v2.model.AdditionalProperties;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * AccountBalanceItem
 */
@JsonPropertyOrder({
  AccountBalanceItem.JSON_PROPERTY_ARRANGEMENT_ID,
  AccountBalanceItem.JSON_PROPERTY_BOOKED_BALANCE,
  AccountBalanceItem.JSON_PROPERTY_AVAILABLE_BALANCE,
  AccountBalanceItem.JSON_PROPERTY_CREDIT_LIMIT,
  AccountBalanceItem.JSON_PROPERTY_OUTSTANDING_PRINCIPAL_AMOUNT,
  AccountBalanceItem.JSON_PROPERTY_CURRENT_INVESTMENT_VALUE
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:30:51.050595100+01:00[Africa/Tunis]")
public  class AccountBalanceItem extends AdditionalProperties {
  public static final String JSON_PROPERTY_ARRANGEMENT_ID = "arrangementId";
  private String arrangementId;

  public static final String JSON_PROPERTY_BOOKED_BALANCE = "bookedBalance";
  private BigDecimal bookedBalance;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_CREDIT_LIMIT = "creditLimit";
  private BigDecimal creditLimit;

  public static final String JSON_PROPERTY_OUTSTANDING_PRINCIPAL_AMOUNT = "outstandingPrincipalAmount";
  private BigDecimal outstandingPrincipalAmount;

  public static final String JSON_PROPERTY_CURRENT_INVESTMENT_VALUE = "currentInvestmentValue";
  private BigDecimal currentInvestmentValue;


  public AccountBalanceItem arrangementId(String arrangementId) {
    
    this.arrangementId = arrangementId;
    return this;
  }

   /**
   * A unique identifier for the Arrangement object that is generated and used Internally in DBS
   * @return arrangementId
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "A unique identifier for the Arrangement object that is generated and used Internally in DBS")
  @JsonProperty(JSON_PROPERTY_ARRANGEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getArrangementId() {
    return arrangementId;
  }


  public void setArrangementId(String arrangementId) {
    this.arrangementId = arrangementId;
  }


  public AccountBalanceItem bookedBalance(BigDecimal bookedBalance) {
    
    this.bookedBalance = bookedBalance;
    return this;
  }

   /**
   * Amount of money available before any adjustments have been made for deposits in transit, checks that have not yet been cleared, reserve requirements and interest received
   * @return bookedBalance
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "Amount of money available before any adjustments have been made for deposits in transit, checks that have not yet been cleared, reserve requirements and interest received")
  @JsonProperty(JSON_PROPERTY_BOOKED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBookedBalance() {
    return bookedBalance;
  }


  public void setBookedBalance(BigDecimal bookedBalance) {
    this.bookedBalance = bookedBalance;
  }


  public AccountBalanceItem availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * The amount that is available for transactions
   * @return availableBalance
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The amount that is available for transactions")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public AccountBalanceItem creditLimit(BigDecimal creditLimit) {
    
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * The credit limit (or overdraft limit) is the maximum amount of credit that the financial institution extends to the account holder for this arrangement.
   * @return creditLimit
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The credit limit (or overdraft limit) is the maximum amount of credit that the financial institution extends to the account holder for this arrangement.")
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCreditLimit() {
    return creditLimit;
  }


  public void setCreditLimit(BigDecimal creditLimit) {
    this.creditLimit = creditLimit;
  }


  public AccountBalanceItem outstandingPrincipalAmount(BigDecimal outstandingPrincipalAmount) {
    
    this.outstandingPrincipalAmount = outstandingPrincipalAmount;
    return this;
  }

   /**
   *  The value date balance of the arrangement
   * @return outstandingPrincipalAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = " The value date balance of the arrangement")
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOutstandingPrincipalAmount() {
    return outstandingPrincipalAmount;
  }


  public void setOutstandingPrincipalAmount(BigDecimal outstandingPrincipalAmount) {
    this.outstandingPrincipalAmount = outstandingPrincipalAmount;
  }


  public AccountBalanceItem currentInvestmentValue(BigDecimal currentInvestmentValue) {
    
    this.currentInvestmentValue = currentInvestmentValue;
    return this;
  }

   /**
   * The total current value of all the securities kept in the account
   * @return currentInvestmentValue
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The total current value of all the securities kept in the account")
  @JsonProperty(JSON_PROPERTY_CURRENT_INVESTMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentInvestmentValue() {
    return currentInvestmentValue;
  }


  public void setCurrentInvestmentValue(BigDecimal currentInvestmentValue) {
    this.currentInvestmentValue = currentInvestmentValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountBalanceItem accountBalanceItem = (AccountBalanceItem) o;
    return Objects.equals(this.arrangementId, accountBalanceItem.arrangementId) &&
        Objects.equals(this.bookedBalance, accountBalanceItem.bookedBalance) &&
        Objects.equals(this.availableBalance, accountBalanceItem.availableBalance) &&
        Objects.equals(this.creditLimit, accountBalanceItem.creditLimit) &&
        Objects.equals(this.outstandingPrincipalAmount, accountBalanceItem.outstandingPrincipalAmount) &&
        Objects.equals(this.currentInvestmentValue, accountBalanceItem.currentInvestmentValue) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arrangementId, bookedBalance, availableBalance, creditLimit, outstandingPrincipalAmount, currentInvestmentValue, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountBalanceItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    arrangementId: ").append(toIndentedString(arrangementId)).append("\n");
    sb.append("    bookedBalance: ").append(toIndentedString(bookedBalance)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    outstandingPrincipalAmount: ").append(toIndentedString(outstandingPrincipalAmount)).append("\n");
    sb.append("    currentInvestmentValue: ").append(toIndentedString(currentInvestmentValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

