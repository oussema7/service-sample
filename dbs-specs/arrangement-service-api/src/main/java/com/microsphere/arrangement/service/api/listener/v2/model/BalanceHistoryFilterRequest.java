/*
 * Arrangement Manager Service API
 * This API allows other DBS services to operate on products
 *
 * The version of the OpenAPI document: 2.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.arrangement.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.arrangement.service.api.listener.v2.model.BalanceHistoryFilterRequestAllOf;
import com.microsphere.arrangement.service.api.listener.v2.model.PaginationDefTrait;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * BalanceHistoryFilterRequest
 */
@JsonPropertyOrder({
  BalanceHistoryFilterRequest.JSON_PROPERTY_FROM,
  BalanceHistoryFilterRequest.JSON_PROPERTY_SIZE,
  BalanceHistoryFilterRequest.JSON_PROPERTY_ARRANGEMENT_IDS,
  BalanceHistoryFilterRequest.JSON_PROPERTY_DATE_FROM,
  BalanceHistoryFilterRequest.JSON_PROPERTY_DATE_TO
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:30:51.050595100+01:00[Africa/Tunis]")
public  class BalanceHistoryFilterRequest {
  public static final String JSON_PROPERTY_FROM = "from";
  private Integer from = 0;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size = 10;

  public static final String JSON_PROPERTY_ARRANGEMENT_IDS = "arrangementIds";
  private List<String> arrangementIds = new ArrayList<>();

  public static final String JSON_PROPERTY_DATE_FROM = "dateFrom";
  private OffsetDateTime dateFrom;

  public static final String JSON_PROPERTY_DATE_TO = "dateTo";
  private OffsetDateTime dateTo;


  public BalanceHistoryFilterRequest from(Integer from) {
    
    this.from = from;
    return this;
  }

   /**
   * Skip over pages of elements by specifying a start value for the query.
   * minimum: 0
   * @return from
  **/
  @javax.annotation.Nullable
 @Min(0)  @ApiModelProperty(example = "20", value = "Skip over pages of elements by specifying a start value for the query.")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFrom() {
    return from;
  }


  public void setFrom(Integer from) {
    this.from = from;
  }


  public BalanceHistoryFilterRequest size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Limit the number of elements in the response (defaults to 10).
   * minimum: 1
   * @return size
  **/
  @javax.annotation.Nullable
 @Min(1)  @ApiModelProperty(example = "10", value = "Limit the number of elements in the response (defaults to 10).")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSize() {
    return size;
  }


  public void setSize(Integer size) {
    this.size = size;
  }


  public BalanceHistoryFilterRequest arrangementIds(List<String> arrangementIds) {
    
    this.arrangementIds = arrangementIds;
    return this;
  }

  public BalanceHistoryFilterRequest addArrangementIdsItem(String arrangementIdsItem) {
    this.arrangementIds.add(arrangementIdsItem);
    return this;
  }

   /**
   * A list of arrangements ids for querying database
   * @return arrangementIds
  **/
  @NotNull
 @Size(min=1)  @ApiModelProperty(required = true, value = "A list of arrangements ids for querying database")
  @JsonProperty(JSON_PROPERTY_ARRANGEMENT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getArrangementIds() {
    return arrangementIds;
  }


  public void setArrangementIds(List<String> arrangementIds) {
    this.arrangementIds = arrangementIds;
  }


  public BalanceHistoryFilterRequest dateFrom(OffsetDateTime dateFrom) {
    
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Get dateFrom
   * @return dateFrom
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATE_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDateFrom() {
    return dateFrom;
  }


  public void setDateFrom(OffsetDateTime dateFrom) {
    this.dateFrom = dateFrom;
  }


  public BalanceHistoryFilterRequest dateTo(OffsetDateTime dateTo) {
    
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Get dateTo
   * @return dateTo
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATE_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDateTo() {
    return dateTo;
  }


  public void setDateTo(OffsetDateTime dateTo) {
    this.dateTo = dateTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceHistoryFilterRequest balanceHistoryFilterRequest = (BalanceHistoryFilterRequest) o;
    return Objects.equals(this.from, balanceHistoryFilterRequest.from) &&
        Objects.equals(this.size, balanceHistoryFilterRequest.size) &&
        Objects.equals(this.arrangementIds, balanceHistoryFilterRequest.arrangementIds) &&
        Objects.equals(this.dateFrom, balanceHistoryFilterRequest.dateFrom) &&
        Objects.equals(this.dateTo, balanceHistoryFilterRequest.dateTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, size, arrangementIds, dateFrom, dateTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceHistoryFilterRequest {\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    arrangementIds: ").append(toIndentedString(arrangementIds)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

