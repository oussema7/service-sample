/*
 * Arrangement Manager Service API
 * This API allows other DBS services to operate on products
 *
 * The version of the OpenAPI document: 2.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.arrangement.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.arrangement.service.api.listener.v2.model.AdditionalProperties;
import com.microsphere.arrangement.service.api.listener.v2.model.UserPreferences;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * DisplayAccountResponse
 */
@JsonPropertyOrder({
  DisplayAccountResponse.JSON_PROPERTY_ID,
  DisplayAccountResponse.JSON_PROPERTY_NAME,
  DisplayAccountResponse.JSON_PROPERTY_DISPLAY_NAME,
  DisplayAccountResponse.JSON_PROPERTY_BANK_ALIAS,
  DisplayAccountResponse.JSON_PROPERTY_I_B_A_N,
  DisplayAccountResponse.JSON_PROPERTY_B_B_A_N,
  DisplayAccountResponse.JSON_PROPERTY_NUMBER,
  DisplayAccountResponse.JSON_PROPERTY_PRODUCT_KIND_NAME,
  DisplayAccountResponse.JSON_PROPERTY_PRODUCT_TYPE_NAME,
  DisplayAccountResponse.JSON_PROPERTY_B_I_C,
  DisplayAccountResponse.JSON_PROPERTY_BANK_BRANCH_CODE,
  DisplayAccountResponse.JSON_PROPERTY_BANK_BRANCH_CODE2,
  DisplayAccountResponse.JSON_PROPERTY_USER_PREFERENCES
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:30:51.050595100+01:00[Africa/Tunis]")
public  class DisplayAccountResponse extends AdditionalProperties {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_BANK_ALIAS = "bankAlias";
  private String bankAlias;

  public static final String JSON_PROPERTY_I_B_A_N = "IBAN";
  private String IBAN;

  public static final String JSON_PROPERTY_B_B_A_N = "BBAN";
  private String BBAN;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private String number;

  public static final String JSON_PROPERTY_PRODUCT_KIND_NAME = "productKindName";
  private String productKindName;

  public static final String JSON_PROPERTY_PRODUCT_TYPE_NAME = "productTypeName";
  private String productTypeName;

  public static final String JSON_PROPERTY_B_I_C = "BIC";
  private String BIC;

  public static final String JSON_PROPERTY_BANK_BRANCH_CODE = "bankBranchCode";
  private String bankBranchCode;

  public static final String JSON_PROPERTY_BANK_BRANCH_CODE2 = "bankBranchCode2";
  private String bankBranchCode2;

  public static final String JSON_PROPERTY_USER_PREFERENCES = "userPreferences";
  private UserPreferences userPreferences;


  public DisplayAccountResponse id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the Arrangement object that is generated and used Internally in DBS
   * @return id
  **/
  @NotNull
 @Size(max=36)  @ApiModelProperty(required = true, value = "A unique identifier for the Arrangement object that is generated and used Internally in DBS")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public DisplayAccountResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name that can be assigned by the bank to label an arrangement
   * @return name
  **/
  @javax.annotation.Nullable
 @Size(min=1,max=50)  @ApiModelProperty(value = "The name that can be assigned by the bank to label an arrangement")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DisplayAccountResponse displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Represents an arrangement by it&#39;s correct naming identifier. It could be account alias or user alias depending on the journey selected by the financial institution. If none of those is set, the arrangement name will be used. 
   * @return displayName
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "Represents an arrangement by it's correct naming identifier. It could be account alias or user alias depending on the journey selected by the financial institution. If none of those is set, the arrangement name will be used. ")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DisplayAccountResponse bankAlias(String bankAlias) {
    
    this.bankAlias = bankAlias;
    return this;
  }

   /**
   * The name that can be assigned by the customer to label the arrangement
   * @return bankAlias
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "The name that can be assigned by the customer to label the arrangement")
  @JsonProperty(JSON_PROPERTY_BANK_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBankAlias() {
    return bankAlias;
  }


  public void setBankAlias(String bankAlias) {
    this.bankAlias = bankAlias;
  }


  public DisplayAccountResponse IBAN(String IBAN) {
    
    this.IBAN = IBAN;
    return this;
  }

   /**
   * The International Bank Account Number. If specified, it must be a valid IBAN, otherwise an invalid value error could be raised. 
   * @return IBAN
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[0-9A-Zâ€¢]+$") @Size(max=34)  @ApiModelProperty(value = "The International Bank Account Number. If specified, it must be a valid IBAN, otherwise an invalid value error could be raised. ")
  @JsonProperty(JSON_PROPERTY_I_B_A_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIBAN() {
    return IBAN;
  }


  public void setIBAN(String IBAN) {
    this.IBAN = IBAN;
  }


  public DisplayAccountResponse BBAN(String BBAN) {
    
    this.BBAN = BBAN;
    return this;
  }

   /**
   * BBAN is the country-specific bank account number. It is short for Basic Bank Account Number. Account numbers usually match the BBAN. 
   * @return BBAN
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "BBAN is the country-specific bank account number. It is short for Basic Bank Account Number. Account numbers usually match the BBAN. ")
  @JsonProperty(JSON_PROPERTY_B_B_A_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBBAN() {
    return BBAN;
  }


  public void setBBAN(String BBAN) {
    this.BBAN = BBAN;
  }


  public DisplayAccountResponse number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.
   * @return number
  **/
  @javax.annotation.Nullable
 @Size(max=36)  @ApiModelProperty(value = "First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.")
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNumber() {
    return number;
  }


  public void setNumber(String number) {
    this.number = number;
  }


  public DisplayAccountResponse productKindName(String productKindName) {
    
    this.productKindName = productKindName;
    return this;
  }

   /**
   * The label/name that is used for the respective product kind ex. Current Account, Savings Account
   * @return productKindName
  **/
  @javax.annotation.Nullable
 @Size(min=1,max=50)  @ApiModelProperty(value = "The label/name that is used for the respective product kind ex. Current Account, Savings Account")
  @JsonProperty(JSON_PROPERTY_PRODUCT_KIND_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductKindName() {
    return productKindName;
  }


  public void setProductKindName(String productKindName) {
    this.productKindName = productKindName;
  }


  public DisplayAccountResponse productTypeName(String productTypeName) {
    
    this.productTypeName = productTypeName;
    return this;
  }

   /**
   * The label/name that is used to label a specific product type
   * @return productTypeName
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "The label/name that is used to label a specific product type")
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductTypeName() {
    return productTypeName;
  }


  public void setProductTypeName(String productTypeName) {
    this.productTypeName = productTypeName;
  }


  public DisplayAccountResponse BIC(String BIC) {
    
    this.BIC = BIC;
    return this;
  }

   /**
   * Bank Identifier Code - international bank code that identifies particular banks worldwide
   * @return BIC
  **/
  @javax.annotation.Nullable
 @Size(max=11)  @ApiModelProperty(value = "Bank Identifier Code - international bank code that identifies particular banks worldwide")
  @JsonProperty(JSON_PROPERTY_B_I_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBIC() {
    return BIC;
  }


  public void setBIC(String BIC) {
    this.BIC = BIC;
  }


  public DisplayAccountResponse bankBranchCode(String bankBranchCode) {
    
    this.bankBranchCode = bankBranchCode;
    return this;
  }

   /**
   * A country-specific bank identification number or code: the sort code in the UK, the ACH routing number in the US, and the transit number in Canada 
   * @return bankBranchCode
  **/
  @javax.annotation.Nullable
 @Size(max=20)  @ApiModelProperty(value = "A country-specific bank identification number or code: the sort code in the UK, the ACH routing number in the US, and the transit number in Canada ")
  @JsonProperty(JSON_PROPERTY_BANK_BRANCH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBankBranchCode() {
    return bankBranchCode;
  }


  public void setBankBranchCode(String bankBranchCode) {
    this.bankBranchCode = bankBranchCode;
  }


  public DisplayAccountResponse bankBranchCode2(String bankBranchCode2) {
    
    this.bankBranchCode2 = bankBranchCode2;
    return this;
  }

   /**
   * Another country-specific bank identification number or code: the Fedwire Routing Number in the US or another country-specific identifier. 
   * @return bankBranchCode2
  **/
  @javax.annotation.Nullable
 @Size(max=20)  @ApiModelProperty(value = "Another country-specific bank identification number or code: the Fedwire Routing Number in the US or another country-specific identifier. ")
  @JsonProperty(JSON_PROPERTY_BANK_BRANCH_CODE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBankBranchCode2() {
    return bankBranchCode2;
  }


  public void setBankBranchCode2(String bankBranchCode2) {
    this.bankBranchCode2 = bankBranchCode2;
  }


  public DisplayAccountResponse userPreferences(UserPreferences userPreferences) {
    
    this.userPreferences = userPreferences;
    return this;
  }

   /**
   * Get userPreferences
   * @return userPreferences
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserPreferences getUserPreferences() {
    return userPreferences;
  }


  public void setUserPreferences(UserPreferences userPreferences) {
    this.userPreferences = userPreferences;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisplayAccountResponse displayAccountResponse = (DisplayAccountResponse) o;
    return Objects.equals(this.id, displayAccountResponse.id) &&
        Objects.equals(this.name, displayAccountResponse.name) &&
        Objects.equals(this.displayName, displayAccountResponse.displayName) &&
        Objects.equals(this.bankAlias, displayAccountResponse.bankAlias) &&
        Objects.equals(this.IBAN, displayAccountResponse.IBAN) &&
        Objects.equals(this.BBAN, displayAccountResponse.BBAN) &&
        Objects.equals(this.number, displayAccountResponse.number) &&
        Objects.equals(this.productKindName, displayAccountResponse.productKindName) &&
        Objects.equals(this.productTypeName, displayAccountResponse.productTypeName) &&
        Objects.equals(this.BIC, displayAccountResponse.BIC) &&
        Objects.equals(this.bankBranchCode, displayAccountResponse.bankBranchCode) &&
        Objects.equals(this.bankBranchCode2, displayAccountResponse.bankBranchCode2) &&
        Objects.equals(this.userPreferences, displayAccountResponse.userPreferences) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, displayName, bankAlias, IBAN, BBAN, number, productKindName, productTypeName, BIC, bankBranchCode, bankBranchCode2, userPreferences, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisplayAccountResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    bankAlias: ").append(toIndentedString(bankAlias)).append("\n");
    sb.append("    IBAN: ").append(toIndentedString(IBAN)).append("\n");
    sb.append("    BBAN: ").append(toIndentedString(BBAN)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    productKindName: ").append(toIndentedString(productKindName)).append("\n");
    sb.append("    productTypeName: ").append(toIndentedString(productTypeName)).append("\n");
    sb.append("    BIC: ").append(toIndentedString(BIC)).append("\n");
    sb.append("    bankBranchCode: ").append(toIndentedString(bankBranchCode)).append("\n");
    sb.append("    bankBranchCode2: ").append(toIndentedString(bankBranchCode2)).append("\n");
    sb.append("    userPreferences: ").append(toIndentedString(userPreferences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

