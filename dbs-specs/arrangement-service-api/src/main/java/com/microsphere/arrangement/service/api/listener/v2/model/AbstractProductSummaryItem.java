/*
 * Arrangement Manager Service API
 * This API allows other DBS services to operate on products
 *
 * The version of the OpenAPI document: 2.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.arrangement.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.arrangement.service.api.listener.v2.model.AbstractLimitedArrangement;
import com.microsphere.arrangement.service.api.listener.v2.model.ProductItem;
import com.microsphere.arrangement.service.api.listener.v2.model.StateItem;
import com.microsphere.arrangement.service.api.listener.v2.model.TimeUnit;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Arrangement item with id included.
 */
@ApiModel(description = "Arrangement item with id included.")
@JsonPropertyOrder({
  AbstractProductSummaryItem.JSON_PROPERTY_EXTERNAL_ARRANGEMENT_ID,
  AbstractProductSummaryItem.JSON_PROPERTY_EXTERNAL_LEGAL_ENTITY_ID,
  AbstractProductSummaryItem.JSON_PROPERTY_EXTERNAL_PRODUCT_ID,
  AbstractProductSummaryItem.JSON_PROPERTY_BOOKED_BALANCE,
  AbstractProductSummaryItem.JSON_PROPERTY_AVAILABLE_BALANCE,
  AbstractProductSummaryItem.JSON_PROPERTY_CREDIT_LIMIT,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCRUED_INTEREST,
  AbstractProductSummaryItem.JSON_PROPERTY_PRINCIPAL_AMOUNT,
  AbstractProductSummaryItem.JSON_PROPERTY_CURRENT_INVESTMENT_VALUE,
  AbstractProductSummaryItem.JSON_PROPERTY_STATEMENT_BALANCE,
  AbstractProductSummaryItem.JSON_PROPERTY_PRODUCT_ID,
  AbstractProductSummaryItem.JSON_PROPERTY_PRODUCT_NUMBER,
  AbstractProductSummaryItem.JSON_PROPERTY_VISIBLE,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_OPENING_DATE,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_INTEREST_RATE,
  AbstractProductSummaryItem.JSON_PROPERTY_VALUE_DATE_BALANCE,
  AbstractProductSummaryItem.JSON_PROPERTY_CREDIT_LIMIT_USAGE,
  AbstractProductSummaryItem.JSON_PROPERTY_CREDIT_LIMIT_INTEREST_RATE,
  AbstractProductSummaryItem.JSON_PROPERTY_CREDIT_LIMIT_EXPIRY_DATE,
  AbstractProductSummaryItem.JSON_PROPERTY_START_DATE,
  AbstractProductSummaryItem.JSON_PROPERTY_TERM_UNIT,
  AbstractProductSummaryItem.JSON_PROPERTY_TERM_NUMBER,
  AbstractProductSummaryItem.JSON_PROPERTY_INTEREST_PAYMENT_FREQUENCY_UNIT,
  AbstractProductSummaryItem.JSON_PROPERTY_INTEREST_PAYMENT_FREQUENCY_NUMBER,
  AbstractProductSummaryItem.JSON_PROPERTY_MATURITY_DATE,
  AbstractProductSummaryItem.JSON_PROPERTY_MATURITY_AMOUNT,
  AbstractProductSummaryItem.JSON_PROPERTY_AUTO_RENEWAL_INDICATOR,
  AbstractProductSummaryItem.JSON_PROPERTY_INTEREST_SETTLEMENT_ACCOUNT,
  AbstractProductSummaryItem.JSON_PROPERTY_OUTSTANDING_PRINCIPAL_AMOUNT,
  AbstractProductSummaryItem.JSON_PROPERTY_MONTHLY_INSTALMENT_AMOUNT,
  AbstractProductSummaryItem.JSON_PROPERTY_AMOUNT_IN_ARREAR,
  AbstractProductSummaryItem.JSON_PROPERTY_MINIMUM_REQUIRED_BALANCE,
  AbstractProductSummaryItem.JSON_PROPERTY_CREDIT_CARD_ACCOUNT_NUMBER,
  AbstractProductSummaryItem.JSON_PROPERTY_VALID_THRU,
  AbstractProductSummaryItem.JSON_PROPERTY_APPLICABLE_INTEREST_RATE,
  AbstractProductSummaryItem.JSON_PROPERTY_REMAINING_CREDIT,
  AbstractProductSummaryItem.JSON_PROPERTY_OUTSTANDING_PAYMENT,
  AbstractProductSummaryItem.JSON_PROPERTY_MINIMUM_PAYMENT,
  AbstractProductSummaryItem.JSON_PROPERTY_MINIMUM_PAYMENT_DUE_DATE,
  AbstractProductSummaryItem.JSON_PROPERTY_TOTAL_INVESTMENT_VALUE,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS_LINE1,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS_LINE2,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_HOLDER_STREET_NAME,
  AbstractProductSummaryItem.JSON_PROPERTY_TOWN,
  AbstractProductSummaryItem.JSON_PROPERTY_POST_CODE,
  AbstractProductSummaryItem.JSON_PROPERTY_COUNTRY_SUB_DIVISION,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_HOLDER_NAMES,
  AbstractProductSummaryItem.JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY,
  AbstractProductSummaryItem.JSON_PROPERTY_LAST_UPDATE_DATE,
  AbstractProductSummaryItem.JSON_PROPERTY_FAVORITE,
  AbstractProductSummaryItem.JSON_PROPERTY_PRODUCT,
  AbstractProductSummaryItem.JSON_PROPERTY_STATE,
  AbstractProductSummaryItem.JSON_PROPERTY_PARENT_ID,
  AbstractProductSummaryItem.JSON_PROPERTY_EXTERNAL_PARENT_ID
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:30:51.050595100+01:00[Africa/Tunis]")
public  class AbstractProductSummaryItem extends AbstractLimitedArrangement {
  public static final String JSON_PROPERTY_EXTERNAL_ARRANGEMENT_ID = "externalArrangementId";
  private String externalArrangementId;

  public static final String JSON_PROPERTY_EXTERNAL_LEGAL_ENTITY_ID = "externalLegalEntityId";
  private String externalLegalEntityId;

  public static final String JSON_PROPERTY_EXTERNAL_PRODUCT_ID = "externalProductId";
  private String externalProductId;

  public static final String JSON_PROPERTY_BOOKED_BALANCE = "bookedBalance";
  private BigDecimal bookedBalance;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;

  public static final String JSON_PROPERTY_CREDIT_LIMIT = "creditLimit";
  private BigDecimal creditLimit;

  public static final String JSON_PROPERTY_ACCRUED_INTEREST = "accruedInterest";
  private BigDecimal accruedInterest;

  public static final String JSON_PROPERTY_PRINCIPAL_AMOUNT = "principalAmount";
  private BigDecimal principalAmount;

  public static final String JSON_PROPERTY_CURRENT_INVESTMENT_VALUE = "currentInvestmentValue";
  private BigDecimal currentInvestmentValue;

  public static final String JSON_PROPERTY_STATEMENT_BALANCE = "statementBalance";
  private BigDecimal statementBalance;

  public static final String JSON_PROPERTY_PRODUCT_ID = "productId";
  private String productId;

  public static final String JSON_PROPERTY_PRODUCT_NUMBER = "productNumber";
  private String productNumber;

  public static final String JSON_PROPERTY_VISIBLE = "visible";
  private Boolean visible;

  public static final String JSON_PROPERTY_ACCOUNT_OPENING_DATE = "accountOpeningDate";
  private OffsetDateTime accountOpeningDate;

  public static final String JSON_PROPERTY_ACCOUNT_INTEREST_RATE = "accountInterestRate";
  private BigDecimal accountInterestRate;

  public static final String JSON_PROPERTY_VALUE_DATE_BALANCE = "valueDateBalance";
  private BigDecimal valueDateBalance;

  public static final String JSON_PROPERTY_CREDIT_LIMIT_USAGE = "creditLimitUsage";
  private BigDecimal creditLimitUsage;

  public static final String JSON_PROPERTY_CREDIT_LIMIT_INTEREST_RATE = "creditLimitInterestRate";
  private BigDecimal creditLimitInterestRate;

  public static final String JSON_PROPERTY_CREDIT_LIMIT_EXPIRY_DATE = "creditLimitExpiryDate";
  private OffsetDateTime creditLimitExpiryDate;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private OffsetDateTime startDate;

  public static final String JSON_PROPERTY_TERM_UNIT = "termUnit";
  private TimeUnit termUnit;

  public static final String JSON_PROPERTY_TERM_NUMBER = "termNumber";
  private BigDecimal termNumber;

  public static final String JSON_PROPERTY_INTEREST_PAYMENT_FREQUENCY_UNIT = "interestPaymentFrequencyUnit";
  private TimeUnit interestPaymentFrequencyUnit;

  public static final String JSON_PROPERTY_INTEREST_PAYMENT_FREQUENCY_NUMBER = "interestPaymentFrequencyNumber";
  private BigDecimal interestPaymentFrequencyNumber;

  public static final String JSON_PROPERTY_MATURITY_DATE = "maturityDate";
  private OffsetDateTime maturityDate;

  public static final String JSON_PROPERTY_MATURITY_AMOUNT = "maturityAmount";
  private BigDecimal maturityAmount;

  public static final String JSON_PROPERTY_AUTO_RENEWAL_INDICATOR = "autoRenewalIndicator";
  private Boolean autoRenewalIndicator;

  public static final String JSON_PROPERTY_INTEREST_SETTLEMENT_ACCOUNT = "interestSettlementAccount";
  private String interestSettlementAccount;

  public static final String JSON_PROPERTY_OUTSTANDING_PRINCIPAL_AMOUNT = "outstandingPrincipalAmount";
  private BigDecimal outstandingPrincipalAmount;

  public static final String JSON_PROPERTY_MONTHLY_INSTALMENT_AMOUNT = "monthlyInstalmentAmount";
  private BigDecimal monthlyInstalmentAmount;

  public static final String JSON_PROPERTY_AMOUNT_IN_ARREAR = "amountInArrear";
  private BigDecimal amountInArrear;

  public static final String JSON_PROPERTY_MINIMUM_REQUIRED_BALANCE = "minimumRequiredBalance";
  private BigDecimal minimumRequiredBalance;

  public static final String JSON_PROPERTY_CREDIT_CARD_ACCOUNT_NUMBER = "creditCardAccountNumber";
  private String creditCardAccountNumber;

  public static final String JSON_PROPERTY_VALID_THRU = "validThru";
  private OffsetDateTime validThru;

  public static final String JSON_PROPERTY_APPLICABLE_INTEREST_RATE = "applicableInterestRate";
  private BigDecimal applicableInterestRate;

  public static final String JSON_PROPERTY_REMAINING_CREDIT = "remainingCredit";
  private BigDecimal remainingCredit;

  public static final String JSON_PROPERTY_OUTSTANDING_PAYMENT = "outstandingPayment";
  private BigDecimal outstandingPayment;

  public static final String JSON_PROPERTY_MINIMUM_PAYMENT = "minimumPayment";
  private BigDecimal minimumPayment;

  public static final String JSON_PROPERTY_MINIMUM_PAYMENT_DUE_DATE = "minimumPaymentDueDate";
  private OffsetDateTime minimumPaymentDueDate;

  public static final String JSON_PROPERTY_TOTAL_INVESTMENT_VALUE = "totalInvestmentValue";
  private BigDecimal totalInvestmentValue;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS_LINE1 = "accountHolderAddressLine1";
  private String accountHolderAddressLine1;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS_LINE2 = "accountHolderAddressLine2";
  private String accountHolderAddressLine2;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_STREET_NAME = "accountHolderStreetName";
  private String accountHolderStreetName;

  public static final String JSON_PROPERTY_TOWN = "town";
  private String town;

  public static final String JSON_PROPERTY_POST_CODE = "postCode";
  private String postCode;

  public static final String JSON_PROPERTY_COUNTRY_SUB_DIVISION = "countrySubDivision";
  private String countrySubDivision;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_NAMES = "accountHolderNames";
  private String accountHolderNames;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY = "accountHolderCountry";
  private String accountHolderCountry;

  public static final String JSON_PROPERTY_LAST_UPDATE_DATE = "lastUpdateDate";
  private OffsetDateTime lastUpdateDate;

  public static final String JSON_PROPERTY_FAVORITE = "favorite";
  private Boolean favorite;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private ProductItem product;

  public static final String JSON_PROPERTY_STATE = "state";
  private StateItem state;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private String parentId;

  public static final String JSON_PROPERTY_EXTERNAL_PARENT_ID = "externalParentId";
  private String externalParentId;


  public AbstractProductSummaryItem externalArrangementId(String externalArrangementId) {
    
    this.externalArrangementId = externalArrangementId;
    return this;
  }

   /**
   * A unique external identifier for the arrangement
   * @return externalArrangementId
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "A unique external identifier for the arrangement")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ARRANGEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalArrangementId() {
    return externalArrangementId;
  }


  public void setExternalArrangementId(String externalArrangementId) {
    this.externalArrangementId = externalArrangementId;
  }


  public AbstractProductSummaryItem externalLegalEntityId(String externalLegalEntityId) {
    
    this.externalLegalEntityId = externalLegalEntityId;
    return this;
  }

   /**
   * A unique identifier for the legal entity for which the arrangement is assigned to. This property is deprecated and was replaced by legalEntityIds), its value is always null.
   * @return externalLegalEntityId
  **/
  @javax.annotation.Nullable
 @Size(max=64)  @ApiModelProperty(value = "A unique identifier for the legal entity for which the arrangement is assigned to. This property is deprecated and was replaced by legalEntityIds), its value is always null.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_LEGAL_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalLegalEntityId() {
    return externalLegalEntityId;
  }


  public void setExternalLegalEntityId(String externalLegalEntityId) {
    this.externalLegalEntityId = externalLegalEntityId;
  }


  public AbstractProductSummaryItem externalProductId(String externalProductId) {
    
    this.externalProductId = externalProductId;
    return this;
  }

   /**
   * A unique identifier for the product that the arrangement applies to. The value is always null since is already included in product field. 
   * @return externalProductId
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "A unique identifier for the product that the arrangement applies to. The value is always null since is already included in product field. ")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalProductId() {
    return externalProductId;
  }


  public void setExternalProductId(String externalProductId) {
    this.externalProductId = externalProductId;
  }


  public AbstractProductSummaryItem bookedBalance(BigDecimal bookedBalance) {
    
    this.bookedBalance = bookedBalance;
    return this;
  }

   /**
   * Amount of money available before any adjustments have been made for deposits in transit, checks that have not yet been cleared, reserve requirements and interest received.
   * @return bookedBalance
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Amount of money available before any adjustments have been made for deposits in transit, checks that have not yet been cleared, reserve requirements and interest received.")
  @JsonProperty(JSON_PROPERTY_BOOKED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBookedBalance() {
    return bookedBalance;
  }


  public void setBookedBalance(BigDecimal bookedBalance) {
    this.bookedBalance = bookedBalance;
  }


  public AbstractProductSummaryItem availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * The amount that is available for transactions.
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The amount that is available for transactions.")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public AbstractProductSummaryItem creditLimit(BigDecimal creditLimit) {
    
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * The credit limit (or overdraft limit) is the maximum amount of credit that the financial institution extends to the account holder for this arrangement.
   * @return creditLimit
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The credit limit (or overdraft limit) is the maximum amount of credit that the financial institution extends to the account holder for this arrangement.")
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCreditLimit() {
    return creditLimit;
  }


  public void setCreditLimit(BigDecimal creditLimit) {
    this.creditLimit = creditLimit;
  }


  public AbstractProductSummaryItem accruedInterest(BigDecimal accruedInterest) {
    
    this.accruedInterest = accruedInterest;
    return this;
  }

   /**
   * The interest that is earned or due, but not settled yet. Interest that is earned is also called credit interest or interest earned year to date. Interest that is due is also called debit interest.
   * @return accruedInterest
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The interest that is earned or due, but not settled yet. Interest that is earned is also called credit interest or interest earned year to date. Interest that is due is also called debit interest.")
  @JsonProperty(JSON_PROPERTY_ACCRUED_INTEREST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAccruedInterest() {
    return accruedInterest;
  }


  public void setAccruedInterest(BigDecimal accruedInterest) {
    this.accruedInterest = accruedInterest;
  }


  public AbstractProductSummaryItem principalAmount(BigDecimal principalAmount) {
    
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   * The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits.
   * @return principalAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits.")
  @JsonProperty(JSON_PROPERTY_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrincipalAmount() {
    return principalAmount;
  }


  public void setPrincipalAmount(BigDecimal principalAmount) {
    this.principalAmount = principalAmount;
  }


  public AbstractProductSummaryItem currentInvestmentValue(BigDecimal currentInvestmentValue) {
    
    this.currentInvestmentValue = currentInvestmentValue;
    return this;
  }

   /**
   * The total current value of all the securities kept in the account.
   * @return currentInvestmentValue
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The total current value of all the securities kept in the account.")
  @JsonProperty(JSON_PROPERTY_CURRENT_INVESTMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentInvestmentValue() {
    return currentInvestmentValue;
  }


  public void setCurrentInvestmentValue(BigDecimal currentInvestmentValue) {
    this.currentInvestmentValue = currentInvestmentValue;
  }


  public AbstractProductSummaryItem statementBalance(BigDecimal statementBalance) {
    
    this.statementBalance = statementBalance;
    return this;
  }

   /**
   * The amount owed on the credit card as of the latest billing cycle. 
   * @return statementBalance
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The amount owed on the credit card as of the latest billing cycle. ")
  @JsonProperty(JSON_PROPERTY_STATEMENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStatementBalance() {
    return statementBalance;
  }


  public void setStatementBalance(BigDecimal statementBalance) {
    this.statementBalance = statementBalance;
  }


  public AbstractProductSummaryItem productId(String productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Reference to the product of which the arrangement is an instantiation.
   * @return productId
  **/
  @javax.annotation.Nullable
 @Size(max=36)  @ApiModelProperty(value = "Reference to the product of which the arrangement is an instantiation.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductId() {
    return productId;
  }


  public void setProductId(String productId) {
    this.productId = productId;
  }


  public AbstractProductSummaryItem productNumber(String productNumber) {
    
    this.productNumber = productNumber;
    return this;
  }

   /**
   * The number identifying the contract.
   * @return productNumber
  **/
  @javax.annotation.Nullable
 @Size(max=36)  @ApiModelProperty(value = "The number identifying the contract.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductNumber() {
    return productNumber;
  }


  public void setProductNumber(String productNumber) {
    this.productNumber = productNumber;
  }


  public AbstractProductSummaryItem visible(Boolean visible) {
    
    this.visible = visible;
    return this;
  }

   /**
   * DEPRECATED 2.12.2 AND REPLACED BY &#x60;userPreferences.visible&#x60;. Indicator whether to show or hide the arrangement on the widget
   * @return visible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DEPRECATED 2.12.2 AND REPLACED BY `userPreferences.visible`. Indicator whether to show or hide the arrangement on the widget")
  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisible() {
    return visible;
  }


  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  public AbstractProductSummaryItem accountOpeningDate(OffsetDateTime accountOpeningDate) {
    
    this.accountOpeningDate = accountOpeningDate;
    return this;
  }

   /**
   * The date of activation of the account in the bank&#39;s system.
   * @return accountOpeningDate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The date of activation of the account in the bank's system.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_OPENING_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAccountOpeningDate() {
    return accountOpeningDate;
  }


  public void setAccountOpeningDate(OffsetDateTime accountOpeningDate) {
    this.accountOpeningDate = accountOpeningDate;
  }


  public AbstractProductSummaryItem accountInterestRate(BigDecimal accountInterestRate) {
    
    this.accountInterestRate = accountInterestRate;
    return this;
  }

   /**
   * The annualized cost of credit or debt capital computed as the percentage ratio of interest to the principal. In the case of credit cards, the account interest rate is the annual percentage that is added monthly to the outstanding balance due on a credit card.
   * @return accountInterestRate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The annualized cost of credit or debt capital computed as the percentage ratio of interest to the principal. In the case of credit cards, the account interest rate is the annual percentage that is added monthly to the outstanding balance due on a credit card.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAccountInterestRate() {
    return accountInterestRate;
  }


  public void setAccountInterestRate(BigDecimal accountInterestRate) {
    this.accountInterestRate = accountInterestRate;
  }


  public AbstractProductSummaryItem valueDateBalance(BigDecimal valueDateBalance) {
    
    this.valueDateBalance = valueDateBalance;
    return this;
  }

   /**
   * The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.
   * @return valueDateBalance
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.")
  @JsonProperty(JSON_PROPERTY_VALUE_DATE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValueDateBalance() {
    return valueDateBalance;
  }


  public void setValueDateBalance(BigDecimal valueDateBalance) {
    this.valueDateBalance = valueDateBalance;
  }


  public AbstractProductSummaryItem creditLimitUsage(BigDecimal creditLimitUsage) {
    
    this.creditLimitUsage = creditLimitUsage;
    return this;
  }

   /**
   * Monetary amount of the used overdraft.
   * @return creditLimitUsage
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Monetary amount of the used overdraft.")
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCreditLimitUsage() {
    return creditLimitUsage;
  }


  public void setCreditLimitUsage(BigDecimal creditLimitUsage) {
    this.creditLimitUsage = creditLimitUsage;
  }


  public AbstractProductSummaryItem creditLimitInterestRate(BigDecimal creditLimitInterestRate) {
    
    this.creditLimitInterestRate = creditLimitInterestRate;
    return this;
  }

   /**
   * Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn.
   * @return creditLimitInterestRate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn.")
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCreditLimitInterestRate() {
    return creditLimitInterestRate;
  }


  public void setCreditLimitInterestRate(BigDecimal creditLimitInterestRate) {
    this.creditLimitInterestRate = creditLimitInterestRate;
  }


  public AbstractProductSummaryItem creditLimitExpiryDate(OffsetDateTime creditLimitExpiryDate) {
    
    this.creditLimitExpiryDate = creditLimitExpiryDate;
    return this;
  }

   /**
   * The date after which overdraft will no longer be available to the account (renewed automatically or cancelled).
   * @return creditLimitExpiryDate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The date after which overdraft will no longer be available to the account (renewed automatically or cancelled).")
  @JsonProperty(JSON_PROPERTY_CREDIT_LIMIT_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreditLimitExpiryDate() {
    return creditLimitExpiryDate;
  }


  public void setCreditLimitExpiryDate(OffsetDateTime creditLimitExpiryDate) {
    this.creditLimitExpiryDate = creditLimitExpiryDate;
  }


  public AbstractProductSummaryItem startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The date on which the credit card becomes active
   * @return startDate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The date on which the credit card becomes active")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public AbstractProductSummaryItem termUnit(TimeUnit termUnit) {
    
    this.termUnit = termUnit;
    return this;
  }

   /**
   * Get termUnit
   * @return termUnit
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TERM_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeUnit getTermUnit() {
    return termUnit;
  }


  public void setTermUnit(TimeUnit termUnit) {
    this.termUnit = termUnit;
  }


  public AbstractProductSummaryItem termNumber(BigDecimal termNumber) {
    
    this.termNumber = termNumber;
    return this;
  }

   /**
   * Number for the Term Unit for the product arranged between Bank and customer
   * @return termNumber
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Number for the Term Unit for the product arranged between Bank and customer")
  @JsonProperty(JSON_PROPERTY_TERM_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTermNumber() {
    return termNumber;
  }


  public void setTermNumber(BigDecimal termNumber) {
    this.termNumber = termNumber;
  }


  public AbstractProductSummaryItem interestPaymentFrequencyUnit(TimeUnit interestPaymentFrequencyUnit) {
    
    this.interestPaymentFrequencyUnit = interestPaymentFrequencyUnit;
    return this;
  }

   /**
   * Get interestPaymentFrequencyUnit
   * @return interestPaymentFrequencyUnit
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTEREST_PAYMENT_FREQUENCY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeUnit getInterestPaymentFrequencyUnit() {
    return interestPaymentFrequencyUnit;
  }


  public void setInterestPaymentFrequencyUnit(TimeUnit interestPaymentFrequencyUnit) {
    this.interestPaymentFrequencyUnit = interestPaymentFrequencyUnit;
  }


  public AbstractProductSummaryItem interestPaymentFrequencyNumber(BigDecimal interestPaymentFrequencyNumber) {
    
    this.interestPaymentFrequencyNumber = interestPaymentFrequencyNumber;
    return this;
  }

   /**
   * Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity)
   * @return interestPaymentFrequencyNumber
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity)")
  @JsonProperty(JSON_PROPERTY_INTEREST_PAYMENT_FREQUENCY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestPaymentFrequencyNumber() {
    return interestPaymentFrequencyNumber;
  }


  public void setInterestPaymentFrequencyNumber(BigDecimal interestPaymentFrequencyNumber) {
    this.interestPaymentFrequencyNumber = interestPaymentFrequencyNumber;
  }


  public AbstractProductSummaryItem maturityDate(OffsetDateTime maturityDate) {
    
    this.maturityDate = maturityDate;
    return this;
  }

   /**
   * End term of a holding period.
   * @return maturityDate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "End term of a holding period.")
  @JsonProperty(JSON_PROPERTY_MATURITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getMaturityDate() {
    return maturityDate;
  }


  public void setMaturityDate(OffsetDateTime maturityDate) {
    this.maturityDate = maturityDate;
  }


  public AbstractProductSummaryItem maturityAmount(BigDecimal maturityAmount) {
    
    this.maturityAmount = maturityAmount;
    return this;
  }

   /**
   * Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).
   * @return maturityAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).")
  @JsonProperty(JSON_PROPERTY_MATURITY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaturityAmount() {
    return maturityAmount;
  }


  public void setMaturityAmount(BigDecimal maturityAmount) {
    this.maturityAmount = maturityAmount;
  }


  public AbstractProductSummaryItem autoRenewalIndicator(Boolean autoRenewalIndicator) {
    
    this.autoRenewalIndicator = autoRenewalIndicator;
    return this;
  }

   /**
   * Indicates whether or not an arrangement is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.
   * @return autoRenewalIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether or not an arrangement is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.")
  @JsonProperty(JSON_PROPERTY_AUTO_RENEWAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoRenewalIndicator() {
    return autoRenewalIndicator;
  }


  public void setAutoRenewalIndicator(Boolean autoRenewalIndicator) {
    this.autoRenewalIndicator = autoRenewalIndicator;
  }


  public AbstractProductSummaryItem interestSettlementAccount(String interestSettlementAccount) {
    
    this.interestSettlementAccount = interestSettlementAccount;
    return this;
  }

   /**
   * Account for settlement of accumulated interest on a regular basis / Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses
   * @return interestSettlementAccount
  **/
  @javax.annotation.Nullable
 @Size(max=32)  @ApiModelProperty(value = "Account for settlement of accumulated interest on a regular basis / Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses")
  @JsonProperty(JSON_PROPERTY_INTEREST_SETTLEMENT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterestSettlementAccount() {
    return interestSettlementAccount;
  }


  public void setInterestSettlementAccount(String interestSettlementAccount) {
    this.interestSettlementAccount = interestSettlementAccount;
  }


  public AbstractProductSummaryItem outstandingPrincipalAmount(BigDecimal outstandingPrincipalAmount) {
    
    this.outstandingPrincipalAmount = outstandingPrincipalAmount;
    return this;
  }

   /**
   * The remaining portion of the original loan amount, plus any interest that has been capitalized, that is still owed. Interest accrues on the outstanding principal balance / The value date balance of the arrangement
   * @return outstandingPrincipalAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The remaining portion of the original loan amount, plus any interest that has been capitalized, that is still owed. Interest accrues on the outstanding principal balance / The value date balance of the arrangement")
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_PRINCIPAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOutstandingPrincipalAmount() {
    return outstandingPrincipalAmount;
  }


  public void setOutstandingPrincipalAmount(BigDecimal outstandingPrincipalAmount) {
    this.outstandingPrincipalAmount = outstandingPrincipalAmount;
  }


  public AbstractProductSummaryItem monthlyInstalmentAmount(BigDecimal monthlyInstalmentAmount) {
    
    this.monthlyInstalmentAmount = monthlyInstalmentAmount;
    return this;
  }

   /**
   * A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.
   * @return monthlyInstalmentAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.")
  @JsonProperty(JSON_PROPERTY_MONTHLY_INSTALMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMonthlyInstalmentAmount() {
    return monthlyInstalmentAmount;
  }


  public void setMonthlyInstalmentAmount(BigDecimal monthlyInstalmentAmount) {
    this.monthlyInstalmentAmount = monthlyInstalmentAmount;
  }


  public AbstractProductSummaryItem amountInArrear(BigDecimal amountInArrear) {
    
    this.amountInArrear = amountInArrear;
    return this;
  }

   /**
   * The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.
   * @return amountInArrear
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.")
  @JsonProperty(JSON_PROPERTY_AMOUNT_IN_ARREAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmountInArrear() {
    return amountInArrear;
  }


  public void setAmountInArrear(BigDecimal amountInArrear) {
    this.amountInArrear = amountInArrear;
  }


  public AbstractProductSummaryItem minimumRequiredBalance(BigDecimal minimumRequiredBalance) {
    
    this.minimumRequiredBalance = minimumRequiredBalance;
    return this;
  }

   /**
   * Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest.
   * @return minimumRequiredBalance
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest.")
  @JsonProperty(JSON_PROPERTY_MINIMUM_REQUIRED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinimumRequiredBalance() {
    return minimumRequiredBalance;
  }


  public void setMinimumRequiredBalance(BigDecimal minimumRequiredBalance) {
    this.minimumRequiredBalance = minimumRequiredBalance;
  }


  public AbstractProductSummaryItem creditCardAccountNumber(String creditCardAccountNumber) {
    
    this.creditCardAccountNumber = creditCardAccountNumber;
    return this;
  }

   /**
   * The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?
   * @return creditCardAccountNumber
  **/
  @javax.annotation.Nullable
 @Size(max=32)  @ApiModelProperty(value = "The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?")
  @JsonProperty(JSON_PROPERTY_CREDIT_CARD_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditCardAccountNumber() {
    return creditCardAccountNumber;
  }


  public void setCreditCardAccountNumber(String creditCardAccountNumber) {
    this.creditCardAccountNumber = creditCardAccountNumber;
  }


  public AbstractProductSummaryItem validThru(OffsetDateTime validThru) {
    
    this.validThru = validThru;
    return this;
  }

   /**
   * Expiration date of a credit card, after which is no longer valid.
   * @return validThru
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Expiration date of a credit card, after which is no longer valid.")
  @JsonProperty(JSON_PROPERTY_VALID_THRU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getValidThru() {
    return validThru;
  }


  public void setValidThru(OffsetDateTime validThru) {
    this.validThru = validThru;
  }


  public AbstractProductSummaryItem applicableInterestRate(BigDecimal applicableInterestRate) {
    
    this.applicableInterestRate = applicableInterestRate;
    return this;
  }

   /**
   * The interest rate or rates which would be used for a particular arrangement.
   * @return applicableInterestRate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The interest rate or rates which would be used for a particular arrangement.")
  @JsonProperty(JSON_PROPERTY_APPLICABLE_INTEREST_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getApplicableInterestRate() {
    return applicableInterestRate;
  }


  public void setApplicableInterestRate(BigDecimal applicableInterestRate) {
    this.applicableInterestRate = applicableInterestRate;
  }


  public AbstractProductSummaryItem remainingCredit(BigDecimal remainingCredit) {
    
    this.remainingCredit = remainingCredit;
    return this;
  }

   /**
   * Amount of money left to spent from the Credit limit of the account. If the user has received a refund, or has transferredadditional funds to the arrangement, then the RemainingCredit can in some cases be greater than the CreditLimit. RemainingCredit &#x3D; CreditLimit - CreditLimitUsage + any additional funds transferred to the arrangement.
   * @return remainingCredit
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Amount of money left to spent from the Credit limit of the account. If the user has received a refund, or has transferredadditional funds to the arrangement, then the RemainingCredit can in some cases be greater than the CreditLimit. RemainingCredit = CreditLimit - CreditLimitUsage + any additional funds transferred to the arrangement.")
  @JsonProperty(JSON_PROPERTY_REMAINING_CREDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRemainingCredit() {
    return remainingCredit;
  }


  public void setRemainingCredit(BigDecimal remainingCredit) {
    this.remainingCredit = remainingCredit;
  }


  public AbstractProductSummaryItem outstandingPayment(BigDecimal outstandingPayment) {
    
    this.outstandingPayment = outstandingPayment;
    return this;
  }

   /**
   * Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due.
   * @return outstandingPayment
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due.")
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOutstandingPayment() {
    return outstandingPayment;
  }


  public void setOutstandingPayment(BigDecimal outstandingPayment) {
    this.outstandingPayment = outstandingPayment;
  }


  public AbstractProductSummaryItem minimumPayment(BigDecimal minimumPayment) {
    
    this.minimumPayment = minimumPayment;
    return this;
  }

   /**
   * The minimum payment set a percentage of balance, or a fixed cash amount.
   * @return minimumPayment
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The minimum payment set a percentage of balance, or a fixed cash amount.")
  @JsonProperty(JSON_PROPERTY_MINIMUM_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinimumPayment() {
    return minimumPayment;
  }


  public void setMinimumPayment(BigDecimal minimumPayment) {
    this.minimumPayment = minimumPayment;
  }


  public AbstractProductSummaryItem minimumPaymentDueDate(OffsetDateTime minimumPaymentDueDate) {
    
    this.minimumPaymentDueDate = minimumPaymentDueDate;
    return this;
  }

   /**
   * Minimum Payment Due Date shown on your monthly statement to remain in good standing.
   * @return minimumPaymentDueDate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Minimum Payment Due Date shown on your monthly statement to remain in good standing.")
  @JsonProperty(JSON_PROPERTY_MINIMUM_PAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getMinimumPaymentDueDate() {
    return minimumPaymentDueDate;
  }


  public void setMinimumPaymentDueDate(OffsetDateTime minimumPaymentDueDate) {
    this.minimumPaymentDueDate = minimumPaymentDueDate;
  }


  public AbstractProductSummaryItem totalInvestmentValue(BigDecimal totalInvestmentValue) {
    
    this.totalInvestmentValue = totalInvestmentValue;
    return this;
  }

   /**
   * The value of an asset to its owner, depending on his or her expectations
   * @return totalInvestmentValue
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The value of an asset to its owner, depending on his or her expectations")
  @JsonProperty(JSON_PROPERTY_TOTAL_INVESTMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalInvestmentValue() {
    return totalInvestmentValue;
  }


  public void setTotalInvestmentValue(BigDecimal totalInvestmentValue) {
    this.totalInvestmentValue = totalInvestmentValue;
  }


  public AbstractProductSummaryItem accountHolderAddressLine1(String accountHolderAddressLine1) {
    
    this.accountHolderAddressLine1 = accountHolderAddressLine1;
    return this;
  }

   /**
   * Address of the Payer/Payee - Alternate address line for the account.
   * @return accountHolderAddressLine1
  **/
  @javax.annotation.Nullable
 @Size(max=70)  @ApiModelProperty(value = "Address of the Payer/Payee - Alternate address line for the account.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountHolderAddressLine1() {
    return accountHolderAddressLine1;
  }


  public void setAccountHolderAddressLine1(String accountHolderAddressLine1) {
    this.accountHolderAddressLine1 = accountHolderAddressLine1;
  }


  public AbstractProductSummaryItem accountHolderAddressLine2(String accountHolderAddressLine2) {
    
    this.accountHolderAddressLine2 = accountHolderAddressLine2;
    return this;
  }

   /**
   * Address of the Payer/Payee - Alternate address line for the account.
   * @return accountHolderAddressLine2
  **/
  @javax.annotation.Nullable
 @Size(max=70)  @ApiModelProperty(value = "Address of the Payer/Payee - Alternate address line for the account.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountHolderAddressLine2() {
    return accountHolderAddressLine2;
  }


  public void setAccountHolderAddressLine2(String accountHolderAddressLine2) {
    this.accountHolderAddressLine2 = accountHolderAddressLine2;
  }


  public AbstractProductSummaryItem accountHolderStreetName(String accountHolderStreetName) {
    
    this.accountHolderStreetName = accountHolderStreetName;
    return this;
  }

   /**
   * Street name of the Payer/Payee - Alternate street name for the account.
   * @return accountHolderStreetName
  **/
  @javax.annotation.Nullable
 @Size(max=70)  @ApiModelProperty(value = "Street name of the Payer/Payee - Alternate street name for the account.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_STREET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountHolderStreetName() {
    return accountHolderStreetName;
  }


  public void setAccountHolderStreetName(String accountHolderStreetName) {
    this.accountHolderStreetName = accountHolderStreetName;
  }


  public AbstractProductSummaryItem town(String town) {
    
    this.town = town;
    return this;
  }

   /**
   * Town of the Payer/Payee - Alternate town for the account.
   * @return town
  **/
  @javax.annotation.Nullable
 @Size(max=35)  @ApiModelProperty(value = "Town of the Payer/Payee - Alternate town for the account.")
  @JsonProperty(JSON_PROPERTY_TOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTown() {
    return town;
  }


  public void setTown(String town) {
    this.town = town;
  }


  public AbstractProductSummaryItem postCode(String postCode) {
    
    this.postCode = postCode;
    return this;
  }

   /**
   * Post Code of the Payer/Payee
   * @return postCode
  **/
  @javax.annotation.Nullable
 @Size(max=16)  @ApiModelProperty(value = "Post Code of the Payer/Payee")
  @JsonProperty(JSON_PROPERTY_POST_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostCode() {
    return postCode;
  }


  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }


  public AbstractProductSummaryItem countrySubDivision(String countrySubDivision) {
    
    this.countrySubDivision = countrySubDivision;
    return this;
  }

   /**
   * Country SubDivision of the Payer/Payee
   * @return countrySubDivision
  **/
  @javax.annotation.Nullable
 @Size(max=35)  @ApiModelProperty(value = "Country SubDivision of the Payer/Payee")
  @JsonProperty(JSON_PROPERTY_COUNTRY_SUB_DIVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountrySubDivision() {
    return countrySubDivision;
  }


  public void setCountrySubDivision(String countrySubDivision) {
    this.countrySubDivision = countrySubDivision;
  }


  public AbstractProductSummaryItem accountHolderNames(String accountHolderNames) {
    
    this.accountHolderNames = accountHolderNames;
    return this;
  }

   /**
   * Party(s) with a relationship to the account.
   * @return accountHolderNames
  **/
  @javax.annotation.Nullable
 @Size(max=256)  @ApiModelProperty(value = "Party(s) with a relationship to the account.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountHolderNames() {
    return accountHolderNames;
  }


  public void setAccountHolderNames(String accountHolderNames) {
    this.accountHolderNames = accountHolderNames;
  }


  public AbstractProductSummaryItem accountHolderCountry(String accountHolderCountry) {
    
    this.accountHolderCountry = accountHolderCountry;
    return this;
  }

   /**
   * Country of the account holder
   * @return accountHolderCountry
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[A-Z]{2}$")  @ApiModelProperty(value = "Country of the account holder")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountHolderCountry() {
    return accountHolderCountry;
  }


  public void setAccountHolderCountry(String accountHolderCountry) {
    this.accountHolderCountry = accountHolderCountry;
  }


  public AbstractProductSummaryItem lastUpdateDate(OffsetDateTime lastUpdateDate) {
    
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

   /**
   * Last date of balance (or other) parameter update for the particular arrangement
   * @return lastUpdateDate
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Last date of balance (or other) parameter update for the particular arrangement")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdateDate() {
    return lastUpdateDate;
  }


  public void setLastUpdateDate(OffsetDateTime lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }


  public AbstractProductSummaryItem favorite(Boolean favorite) {
    
    this.favorite = favorite;
    return this;
  }

   /**
   * DEPRECATED 2.12.2 AND REPLACED BY &#x60;userPreferences&#x60;. Indication whether an arrangement is set as favorite for a user.
   * @return favorite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DEPRECATED 2.12.2 AND REPLACED BY `userPreferences`. Indication whether an arrangement is set as favorite for a user.")
  @JsonProperty(JSON_PROPERTY_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFavorite() {
    return favorite;
  }


  public void setFavorite(Boolean favorite) {
    this.favorite = favorite;
  }


  public AbstractProductSummaryItem product(ProductItem product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductItem getProduct() {
    return product;
  }


  public void setProduct(ProductItem product) {
    this.product = product;
  }


  public AbstractProductSummaryItem state(StateItem state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateItem getState() {
    return state;
  }


  public void setState(StateItem state) {
    this.state = state;
  }


  public AbstractProductSummaryItem parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Indicate if the arrangement has parent child relationship with another arrangement.
   * @return parentId
  **/
  @javax.annotation.Nullable
 @Size(max=36)  @ApiModelProperty(value = "Indicate if the arrangement has parent child relationship with another arrangement.")
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public AbstractProductSummaryItem externalParentId(String externalParentId) {
    
    this.externalParentId = externalParentId;
    return this;
  }

   /**
   * Indicate if the arrangement has parent child relationship with another arrangement.
   * @return externalParentId
  **/
  @javax.annotation.Nullable
 @Size(max=50)  @ApiModelProperty(value = "Indicate if the arrangement has parent child relationship with another arrangement.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalParentId() {
    return externalParentId;
  }


  public void setExternalParentId(String externalParentId) {
    this.externalParentId = externalParentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbstractProductSummaryItem abstractProductSummaryItem = (AbstractProductSummaryItem) o;
    return Objects.equals(this.externalArrangementId, abstractProductSummaryItem.externalArrangementId) &&
        Objects.equals(this.externalLegalEntityId, abstractProductSummaryItem.externalLegalEntityId) &&
        Objects.equals(this.externalProductId, abstractProductSummaryItem.externalProductId) &&
        Objects.equals(this.bookedBalance, abstractProductSummaryItem.bookedBalance) &&
        Objects.equals(this.availableBalance, abstractProductSummaryItem.availableBalance) &&
        Objects.equals(this.creditLimit, abstractProductSummaryItem.creditLimit) &&
        Objects.equals(this.accruedInterest, abstractProductSummaryItem.accruedInterest) &&
        Objects.equals(this.principalAmount, abstractProductSummaryItem.principalAmount) &&
        Objects.equals(this.currentInvestmentValue, abstractProductSummaryItem.currentInvestmentValue) &&
        Objects.equals(this.statementBalance, abstractProductSummaryItem.statementBalance) &&
        Objects.equals(this.productId, abstractProductSummaryItem.productId) &&
        Objects.equals(this.productNumber, abstractProductSummaryItem.productNumber) &&
        Objects.equals(this.visible, abstractProductSummaryItem.visible) &&
        Objects.equals(this.accountOpeningDate, abstractProductSummaryItem.accountOpeningDate) &&
        Objects.equals(this.accountInterestRate, abstractProductSummaryItem.accountInterestRate) &&
        Objects.equals(this.valueDateBalance, abstractProductSummaryItem.valueDateBalance) &&
        Objects.equals(this.creditLimitUsage, abstractProductSummaryItem.creditLimitUsage) &&
        Objects.equals(this.creditLimitInterestRate, abstractProductSummaryItem.creditLimitInterestRate) &&
        Objects.equals(this.creditLimitExpiryDate, abstractProductSummaryItem.creditLimitExpiryDate) &&
        Objects.equals(this.startDate, abstractProductSummaryItem.startDate) &&
        Objects.equals(this.termUnit, abstractProductSummaryItem.termUnit) &&
        Objects.equals(this.termNumber, abstractProductSummaryItem.termNumber) &&
        Objects.equals(this.interestPaymentFrequencyUnit, abstractProductSummaryItem.interestPaymentFrequencyUnit) &&
        Objects.equals(this.interestPaymentFrequencyNumber, abstractProductSummaryItem.interestPaymentFrequencyNumber) &&
        Objects.equals(this.maturityDate, abstractProductSummaryItem.maturityDate) &&
        Objects.equals(this.maturityAmount, abstractProductSummaryItem.maturityAmount) &&
        Objects.equals(this.autoRenewalIndicator, abstractProductSummaryItem.autoRenewalIndicator) &&
        Objects.equals(this.interestSettlementAccount, abstractProductSummaryItem.interestSettlementAccount) &&
        Objects.equals(this.outstandingPrincipalAmount, abstractProductSummaryItem.outstandingPrincipalAmount) &&
        Objects.equals(this.monthlyInstalmentAmount, abstractProductSummaryItem.monthlyInstalmentAmount) &&
        Objects.equals(this.amountInArrear, abstractProductSummaryItem.amountInArrear) &&
        Objects.equals(this.minimumRequiredBalance, abstractProductSummaryItem.minimumRequiredBalance) &&
        Objects.equals(this.creditCardAccountNumber, abstractProductSummaryItem.creditCardAccountNumber) &&
        Objects.equals(this.validThru, abstractProductSummaryItem.validThru) &&
        Objects.equals(this.applicableInterestRate, abstractProductSummaryItem.applicableInterestRate) &&
        Objects.equals(this.remainingCredit, abstractProductSummaryItem.remainingCredit) &&
        Objects.equals(this.outstandingPayment, abstractProductSummaryItem.outstandingPayment) &&
        Objects.equals(this.minimumPayment, abstractProductSummaryItem.minimumPayment) &&
        Objects.equals(this.minimumPaymentDueDate, abstractProductSummaryItem.minimumPaymentDueDate) &&
        Objects.equals(this.totalInvestmentValue, abstractProductSummaryItem.totalInvestmentValue) &&
        Objects.equals(this.accountHolderAddressLine1, abstractProductSummaryItem.accountHolderAddressLine1) &&
        Objects.equals(this.accountHolderAddressLine2, abstractProductSummaryItem.accountHolderAddressLine2) &&
        Objects.equals(this.accountHolderStreetName, abstractProductSummaryItem.accountHolderStreetName) &&
        Objects.equals(this.town, abstractProductSummaryItem.town) &&
        Objects.equals(this.postCode, abstractProductSummaryItem.postCode) &&
        Objects.equals(this.countrySubDivision, abstractProductSummaryItem.countrySubDivision) &&
        Objects.equals(this.accountHolderNames, abstractProductSummaryItem.accountHolderNames) &&
        Objects.equals(this.accountHolderCountry, abstractProductSummaryItem.accountHolderCountry) &&
        Objects.equals(this.lastUpdateDate, abstractProductSummaryItem.lastUpdateDate) &&
        Objects.equals(this.favorite, abstractProductSummaryItem.favorite) &&
        Objects.equals(this.product, abstractProductSummaryItem.product) &&
        Objects.equals(this.state, abstractProductSummaryItem.state) &&
        Objects.equals(this.parentId, abstractProductSummaryItem.parentId) &&
        Objects.equals(this.externalParentId, abstractProductSummaryItem.externalParentId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalArrangementId, externalLegalEntityId, externalProductId, bookedBalance, availableBalance, creditLimit, accruedInterest, principalAmount, currentInvestmentValue, statementBalance, productId, productNumber, visible, accountOpeningDate, accountInterestRate, valueDateBalance, creditLimitUsage, creditLimitInterestRate, creditLimitExpiryDate, startDate, termUnit, termNumber, interestPaymentFrequencyUnit, interestPaymentFrequencyNumber, maturityDate, maturityAmount, autoRenewalIndicator, interestSettlementAccount, outstandingPrincipalAmount, monthlyInstalmentAmount, amountInArrear, minimumRequiredBalance, creditCardAccountNumber, validThru, applicableInterestRate, remainingCredit, outstandingPayment, minimumPayment, minimumPaymentDueDate, totalInvestmentValue, accountHolderAddressLine1, accountHolderAddressLine2, accountHolderStreetName, town, postCode, countrySubDivision, accountHolderNames, accountHolderCountry, lastUpdateDate, favorite, product, state, parentId, externalParentId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbstractProductSummaryItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    externalArrangementId: ").append(toIndentedString(externalArrangementId)).append("\n");
    sb.append("    externalLegalEntityId: ").append(toIndentedString(externalLegalEntityId)).append("\n");
    sb.append("    externalProductId: ").append(toIndentedString(externalProductId)).append("\n");
    sb.append("    bookedBalance: ").append(toIndentedString(bookedBalance)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    accruedInterest: ").append(toIndentedString(accruedInterest)).append("\n");
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    currentInvestmentValue: ").append(toIndentedString(currentInvestmentValue)).append("\n");
    sb.append("    statementBalance: ").append(toIndentedString(statementBalance)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productNumber: ").append(toIndentedString(productNumber)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    accountOpeningDate: ").append(toIndentedString(accountOpeningDate)).append("\n");
    sb.append("    accountInterestRate: ").append(toIndentedString(accountInterestRate)).append("\n");
    sb.append("    valueDateBalance: ").append(toIndentedString(valueDateBalance)).append("\n");
    sb.append("    creditLimitUsage: ").append(toIndentedString(creditLimitUsage)).append("\n");
    sb.append("    creditLimitInterestRate: ").append(toIndentedString(creditLimitInterestRate)).append("\n");
    sb.append("    creditLimitExpiryDate: ").append(toIndentedString(creditLimitExpiryDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    termUnit: ").append(toIndentedString(termUnit)).append("\n");
    sb.append("    termNumber: ").append(toIndentedString(termNumber)).append("\n");
    sb.append("    interestPaymentFrequencyUnit: ").append(toIndentedString(interestPaymentFrequencyUnit)).append("\n");
    sb.append("    interestPaymentFrequencyNumber: ").append(toIndentedString(interestPaymentFrequencyNumber)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    maturityAmount: ").append(toIndentedString(maturityAmount)).append("\n");
    sb.append("    autoRenewalIndicator: ").append(toIndentedString(autoRenewalIndicator)).append("\n");
    sb.append("    interestSettlementAccount: ").append(toIndentedString(interestSettlementAccount)).append("\n");
    sb.append("    outstandingPrincipalAmount: ").append(toIndentedString(outstandingPrincipalAmount)).append("\n");
    sb.append("    monthlyInstalmentAmount: ").append(toIndentedString(monthlyInstalmentAmount)).append("\n");
    sb.append("    amountInArrear: ").append(toIndentedString(amountInArrear)).append("\n");
    sb.append("    minimumRequiredBalance: ").append(toIndentedString(minimumRequiredBalance)).append("\n");
    sb.append("    creditCardAccountNumber: ").append(toIndentedString(creditCardAccountNumber)).append("\n");
    sb.append("    validThru: ").append(toIndentedString(validThru)).append("\n");
    sb.append("    applicableInterestRate: ").append(toIndentedString(applicableInterestRate)).append("\n");
    sb.append("    remainingCredit: ").append(toIndentedString(remainingCredit)).append("\n");
    sb.append("    outstandingPayment: ").append(toIndentedString(outstandingPayment)).append("\n");
    sb.append("    minimumPayment: ").append(toIndentedString(minimumPayment)).append("\n");
    sb.append("    minimumPaymentDueDate: ").append(toIndentedString(minimumPaymentDueDate)).append("\n");
    sb.append("    totalInvestmentValue: ").append(toIndentedString(totalInvestmentValue)).append("\n");
    sb.append("    accountHolderAddressLine1: ").append(toIndentedString(accountHolderAddressLine1)).append("\n");
    sb.append("    accountHolderAddressLine2: ").append(toIndentedString(accountHolderAddressLine2)).append("\n");
    sb.append("    accountHolderStreetName: ").append(toIndentedString(accountHolderStreetName)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    countrySubDivision: ").append(toIndentedString(countrySubDivision)).append("\n");
    sb.append("    accountHolderNames: ").append(toIndentedString(accountHolderNames)).append("\n");
    sb.append("    accountHolderCountry: ").append(toIndentedString(accountHolderCountry)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("    favorite: ").append(toIndentedString(favorite)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    externalParentId: ").append(toIndentedString(externalParentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

