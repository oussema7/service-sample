/*
 * Approvals service
 * Other services approve or reject approvals, and update approval types, policies, and policy assignments.
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.approval.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.approval.service.api.listener.v2.model.ConfirmationDetails;
import com.microsphere.approval.service.api.listener.v2.model.RecordStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * This is the request body to request an update of the status for an approval. This is initiated by a user when he either approves or rejects an item in a capability.
 */
@ApiModel(description = "This is the request body to request an update of the status for an approval. This is initiated by a user when he either approves or rejects an item in a capability.")
@JsonPropertyOrder({
  PostApprovalRecordRequest.JSON_PROPERTY_USER_ID,
  PostApprovalRecordRequest.JSON_PROPERTY_SERVICE_AGREEMENT_ID,
  PostApprovalRecordRequest.JSON_PROPERTY_STATUS,
  PostApprovalRecordRequest.JSON_PROPERTY_COMMENT,
  PostApprovalRecordRequest.JSON_PROPERTY_CONFIRMATION_DETAILS,
  PostApprovalRecordRequest.JSON_PROPERTY_STATUS_CODE,
  PostApprovalRecordRequest.JSON_PROPERTY_ADDITIONS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:49.266495+01:00[Africa/Tunis]")
public  class PostApprovalRecordRequest {
  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENT_ID = "serviceAgreementId";
  private String serviceAgreementId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private RecordStatus status;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_CONFIRMATION_DETAILS = "confirmationDetails";
  private ConfirmationDetails confirmationDetails;

  public static final String JSON_PROPERTY_STATUS_CODE = "statusCode";
  private String statusCode;

  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;


  public PostApprovalRecordRequest userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * A simple definition for an internal identifier. Can be UUID but doesn&#39;t have to.
   * @return userId
  **/
  @NotNull
 @Size(min=1,max=36)  @ApiModelProperty(required = true, value = "A simple definition for an internal identifier. Can be UUID but doesn't have to.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public PostApprovalRecordRequest serviceAgreementId(String serviceAgreementId) {
    
    this.serviceAgreementId = serviceAgreementId;
    return this;
  }

   /**
   * A simple definition for an internal identifier. Can be UUID but doesn&#39;t have to.
   * @return serviceAgreementId
  **/
  @NotNull
 @Size(min=1,max=36)  @ApiModelProperty(required = true, value = "A simple definition for an internal identifier. Can be UUID but doesn't have to.")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceAgreementId() {
    return serviceAgreementId;
  }


  public void setServiceAgreementId(String serviceAgreementId) {
    this.serviceAgreementId = serviceAgreementId;
  }


  public PostApprovalRecordRequest status(RecordStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RecordStatus getStatus() {
    return status;
  }


  public void setStatus(RecordStatus status) {
    this.status = status;
  }


  public PostApprovalRecordRequest comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * When approving or rejecting, the user can add comments which would explain the reason for the action.
   * @return comment
  **/
  @javax.annotation.Nullable
 @Size(max=140)  @ApiModelProperty(value = "When approving or rejecting, the user can add comments which would explain the reason for the action.")
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public PostApprovalRecordRequest confirmationDetails(ConfirmationDetails confirmationDetails) {
    
    this.confirmationDetails = confirmationDetails;
    return this;
  }

   /**
   * Get confirmationDetails
   * @return confirmationDetails
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONFIRMATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfirmationDetails getConfirmationDetails() {
    return confirmationDetails;
  }


  public void setConfirmationDetails(ConfirmationDetails confirmationDetails) {
    this.confirmationDetails = confirmationDetails;
  }


  public PostApprovalRecordRequest statusCode(String statusCode) {
    
    this.statusCode = statusCode;
    return this;
  }

   /**
   * This reflects the approval record status reason. If this field is set and confirmation flow is disabled, the approval record will be created with PROCESSING status and with this status code.
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This reflects the approval record status reason. If this field is set and confirmation flow is disabled, the approval record will be created with PROCESSING status and with this status code.")
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatusCode() {
    return statusCode;
  }


  public void setStatusCode(String statusCode) {
    this.statusCode = statusCode;
  }


  public PostApprovalRecordRequest additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public PostApprovalRecordRequest putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Additional properties
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional properties")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostApprovalRecordRequest postApprovalRecordRequest = (PostApprovalRecordRequest) o;
    return Objects.equals(this.userId, postApprovalRecordRequest.userId) &&
        Objects.equals(this.serviceAgreementId, postApprovalRecordRequest.serviceAgreementId) &&
        Objects.equals(this.status, postApprovalRecordRequest.status) &&
        Objects.equals(this.comment, postApprovalRecordRequest.comment) &&
        Objects.equals(this.confirmationDetails, postApprovalRecordRequest.confirmationDetails) &&
        Objects.equals(this.statusCode, postApprovalRecordRequest.statusCode) &&
        Objects.equals(this.additions, postApprovalRecordRequest.additions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, serviceAgreementId, status, comment, confirmationDetails, statusCode, additions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostApprovalRecordRequest {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    serviceAgreementId: ").append(toIndentedString(serviceAgreementId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    confirmationDetails: ").append(toIndentedString(confirmationDetails)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

