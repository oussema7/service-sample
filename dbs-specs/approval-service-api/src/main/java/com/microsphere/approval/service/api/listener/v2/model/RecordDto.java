/*
 * Approvals service
 * Other services approve or reject approvals, and update approval types, policies, and policy assignments.
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.approval.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.approval.service.api.listener.v2.model.RecordStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * A single record of either an approval or rejection by a user on an approval request.
 */
@ApiModel(description = "A single record of either an approval or rejection by a user on an approval request.")
@JsonPropertyOrder({
  RecordDto.JSON_PROPERTY_ID,
  RecordDto.JSON_PROPERTY_USER_ID,
  RecordDto.JSON_PROPERTY_SERVICE_AGREEMENT_ID,
  RecordDto.JSON_PROPERTY_APPROVAL_TYPE_ID,
  RecordDto.JSON_PROPERTY_STATUS,
  RecordDto.JSON_PROPERTY_CREATED_AT,
  RecordDto.JSON_PROPERTY_COMMENT,
  RecordDto.JSON_PROPERTY_EXTERNAL_USER_ID,
  RecordDto.JSON_PROPERTY_USER_FULL_NAME,
  RecordDto.JSON_PROPERTY_ADDITIONS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:49.266495+01:00[Africa/Tunis]")
public  class RecordDto {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENT_ID = "serviceAgreementId";
  private String serviceAgreementId;

  public static final String JSON_PROPERTY_APPROVAL_TYPE_ID = "approvalTypeId";
  private String approvalTypeId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private RecordStatus status;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_EXTERNAL_USER_ID = "externalUserId";
  private String externalUserId;

  public static final String JSON_PROPERTY_USER_FULL_NAME = "userFullName";
  private String userFullName;

  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;


  public RecordDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Universal Unique Identifier, 
   * @return id
  **/
  @NotNull
 @Pattern(regexp="^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[1-5][0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$")  @ApiModelProperty(required = true, value = "Universal Unique Identifier, ")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RecordDto userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * A simple definition for an internal identifier. Can be UUID but doesn&#39;t have to.
   * @return userId
  **/
  @NotNull
 @Size(min=1,max=36)  @ApiModelProperty(required = true, value = "A simple definition for an internal identifier. Can be UUID but doesn't have to.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public RecordDto serviceAgreementId(String serviceAgreementId) {
    
    this.serviceAgreementId = serviceAgreementId;
    return this;
  }

   /**
   * A simple definition for an internal identifier. Can be UUID but doesn&#39;t have to.
   * @return serviceAgreementId
  **/
  @javax.annotation.Nullable
 @Size(min=1,max=36)  @ApiModelProperty(value = "A simple definition for an internal identifier. Can be UUID but doesn't have to.")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceAgreementId() {
    return serviceAgreementId;
  }


  public void setServiceAgreementId(String serviceAgreementId) {
    this.serviceAgreementId = serviceAgreementId;
  }


  public RecordDto approvalTypeId(String approvalTypeId) {
    
    this.approvalTypeId = approvalTypeId;
    return this;
  }

   /**
   * Universal Unique Identifier, 
   * @return approvalTypeId
  **/
  @NotNull
 @Pattern(regexp="^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[1-5][0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$")  @ApiModelProperty(required = true, value = "Universal Unique Identifier, ")
  @JsonProperty(JSON_PROPERTY_APPROVAL_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApprovalTypeId() {
    return approvalTypeId;
  }


  public void setApprovalTypeId(String approvalTypeId) {
    this.approvalTypeId = approvalTypeId;
  }


  public RecordDto status(RecordStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RecordStatus getStatus() {
    return status;
  }


  public void setStatus(RecordStatus status) {
    this.status = status;
  }


  public RecordDto createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The timestamp indicates when the object was created.
   * @return createdAt
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The timestamp indicates when the object was created.")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public RecordDto comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * When approving or rejecting, the user can add comments which would explain the reason for the action.
   * @return comment
  **/
  @javax.annotation.Nullable
 @Size(max=140)  @ApiModelProperty(value = "When approving or rejecting, the user can add comments which would explain the reason for the action.")
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public RecordDto externalUserId(String externalUserId) {
    
    this.externalUserId = externalUserId;
    return this;
  }

   /**
   * The (unique and human readable) external user id of the user.
   * @return externalUserId
  **/
  @javax.annotation.Nullable
 @Size(max=64)  @ApiModelProperty(value = "The (unique and human readable) external user id of the user.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalUserId() {
    return externalUserId;
  }


  public void setExternalUserId(String externalUserId) {
    this.externalUserId = externalUserId;
  }


  public RecordDto userFullName(String userFullName) {
    
    this.userFullName = userFullName;
    return this;
  }

   /**
   * The full name of a user.
   * @return userFullName
  **/
  @javax.annotation.Nullable
 @Size(min=1,max=255)  @ApiModelProperty(value = "The full name of a user.")
  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserFullName() {
    return userFullName;
  }


  public void setUserFullName(String userFullName) {
    this.userFullName = userFullName;
  }


  public RecordDto additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public RecordDto putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Additional properties
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional properties")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordDto recordDto = (RecordDto) o;
    return Objects.equals(this.id, recordDto.id) &&
        Objects.equals(this.userId, recordDto.userId) &&
        Objects.equals(this.serviceAgreementId, recordDto.serviceAgreementId) &&
        Objects.equals(this.approvalTypeId, recordDto.approvalTypeId) &&
        Objects.equals(this.status, recordDto.status) &&
        Objects.equals(this.createdAt, recordDto.createdAt) &&
        Objects.equals(this.comment, recordDto.comment) &&
        Objects.equals(this.externalUserId, recordDto.externalUserId) &&
        Objects.equals(this.userFullName, recordDto.userFullName) &&
        Objects.equals(this.additions, recordDto.additions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, serviceAgreementId, approvalTypeId, status, createdAt, comment, externalUserId, userFullName, additions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    serviceAgreementId: ").append(toIndentedString(serviceAgreementId)).append("\n");
    sb.append("    approvalTypeId: ").append(toIndentedString(approvalTypeId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    externalUserId: ").append(toIndentedString(externalUserId)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

