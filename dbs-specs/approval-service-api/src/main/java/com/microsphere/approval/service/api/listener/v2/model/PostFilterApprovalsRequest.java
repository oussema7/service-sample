/*
 * Approvals service
 * Other services approve or reject approvals, and update approval types, policies, and policy assignments.
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.approval.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * This is a POST request with filter parameters in the request body.
 */
@ApiModel(description = "This is a POST request with filter parameters in the request body.")
@JsonPropertyOrder({
  PostFilterApprovalsRequest.JSON_PROPERTY_CAN_APPROVE,
  PostFilterApprovalsRequest.JSON_PROPERTY_CAN_REJECT,
  PostFilterApprovalsRequest.JSON_PROPERTY_FUNCTIONS,
  PostFilterApprovalsRequest.JSON_PROPERTY_APPROVAL_IDS,
  PostFilterApprovalsRequest.JSON_PROPERTY_USER_ID,
  PostFilterApprovalsRequest.JSON_PROPERTY_SERVICE_AGREEMENT_ID,
  PostFilterApprovalsRequest.JSON_PROPERTY_ADDITIONS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:49.266495+01:00[Africa/Tunis]")
public  class PostFilterApprovalsRequest {
  public static final String JSON_PROPERTY_CAN_APPROVE = "canApprove";
  private Boolean canApprove;

  public static final String JSON_PROPERTY_CAN_REJECT = "canReject";
  private Boolean canReject;

  public static final String JSON_PROPERTY_FUNCTIONS = "functions";
  private List<String> functions = null;

  public static final String JSON_PROPERTY_APPROVAL_IDS = "approvalIds";
  private List<String> approvalIds = null;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENT_ID = "serviceAgreementId";
  private String serviceAgreementId;

  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;


  public PostFilterApprovalsRequest canApprove(Boolean canApprove) {
    
    this.canApprove = canApprove;
    return this;
  }

   /**
   * If true, it will only return approvals the user with the given job profile summary is able to approve. This filter is not compatible with &#39;approvalIds&#39;!
   * @return canApprove
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, it will only return approvals the user with the given job profile summary is able to approve. This filter is not compatible with 'approvalIds'!")
  @JsonProperty(JSON_PROPERTY_CAN_APPROVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanApprove() {
    return canApprove;
  }


  public void setCanApprove(Boolean canApprove) {
    this.canApprove = canApprove;
  }


  public PostFilterApprovalsRequest canReject(Boolean canReject) {
    
    this.canReject = canReject;
    return this;
  }

   /**
   * If true, it will only return approvals the user with the given job profile summary is able to reject. This filter is not compatible with &#39;approvalIds&#39;!
   * @return canReject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, it will only return approvals the user with the given job profile summary is able to reject. This filter is not compatible with 'approvalIds'!")
  @JsonProperty(JSON_PROPERTY_CAN_REJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanReject() {
    return canReject;
  }


  public void setCanReject(Boolean canReject) {
    this.canReject = canReject;
  }


  public PostFilterApprovalsRequest functions(List<String> functions) {
    
    this.functions = functions;
    return this;
  }

  public PostFilterApprovalsRequest addFunctionsItem(String functionsItem) {
    if (this.functions == null) {
      this.functions = new ArrayList<>();
    }
    this.functions.add(functionsItem);
    return this;
  }

   /**
   * List of functions used to narrow down the results. This filter is not compatible with &#39;approvalIds&#39;!
   * @return functions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of functions used to narrow down the results. This filter is not compatible with 'approvalIds'!")
  @JsonProperty(JSON_PROPERTY_FUNCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFunctions() {
    return functions;
  }


  public void setFunctions(List<String> functions) {
    this.functions = functions;
  }


  public PostFilterApprovalsRequest approvalIds(List<String> approvalIds) {
    
    this.approvalIds = approvalIds;
    return this;
  }

  public PostFilterApprovalsRequest addApprovalIdsItem(String approvalIdsItem) {
    if (this.approvalIds == null) {
      this.approvalIds = new ArrayList<>();
    }
    this.approvalIds.add(approvalIdsItem);
    return this;
  }

   /**
   * A list of ID&#39;s of the approval to retrieve. This filter is not compatible with other filters!
   * @return approvalIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of ID's of the approval to retrieve. This filter is not compatible with other filters!")
  @JsonProperty(JSON_PROPERTY_APPROVAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getApprovalIds() {
    return approvalIds;
  }


  public void setApprovalIds(List<String> approvalIds) {
    this.approvalIds = approvalIds;
  }


  public PostFilterApprovalsRequest userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * A simple definition for an internal identifier. Can be UUID but doesn&#39;t have to.
   * @return userId
  **/
  @NotNull
 @Size(min=1,max=36)  @ApiModelProperty(required = true, value = "A simple definition for an internal identifier. Can be UUID but doesn't have to.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public PostFilterApprovalsRequest serviceAgreementId(String serviceAgreementId) {
    
    this.serviceAgreementId = serviceAgreementId;
    return this;
  }

   /**
   * A simple definition for an internal identifier. Can be UUID but doesn&#39;t have to.
   * @return serviceAgreementId
  **/
  @NotNull
 @Size(min=1,max=36)  @ApiModelProperty(required = true, value = "A simple definition for an internal identifier. Can be UUID but doesn't have to.")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceAgreementId() {
    return serviceAgreementId;
  }


  public void setServiceAgreementId(String serviceAgreementId) {
    this.serviceAgreementId = serviceAgreementId;
  }


  public PostFilterApprovalsRequest additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public PostFilterApprovalsRequest putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Additional properties
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional properties")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostFilterApprovalsRequest postFilterApprovalsRequest = (PostFilterApprovalsRequest) o;
    return Objects.equals(this.canApprove, postFilterApprovalsRequest.canApprove) &&
        Objects.equals(this.canReject, postFilterApprovalsRequest.canReject) &&
        Objects.equals(this.functions, postFilterApprovalsRequest.functions) &&
        Objects.equals(this.approvalIds, postFilterApprovalsRequest.approvalIds) &&
        Objects.equals(this.userId, postFilterApprovalsRequest.userId) &&
        Objects.equals(this.serviceAgreementId, postFilterApprovalsRequest.serviceAgreementId) &&
        Objects.equals(this.additions, postFilterApprovalsRequest.additions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canApprove, canReject, functions, approvalIds, userId, serviceAgreementId, additions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostFilterApprovalsRequest {\n");
    sb.append("    canApprove: ").append(toIndentedString(canApprove)).append("\n");
    sb.append("    canReject: ").append(toIndentedString(canReject)).append("\n");
    sb.append("    functions: ").append(toIndentedString(functions)).append("\n");
    sb.append("    approvalIds: ").append(toIndentedString(approvalIds)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    serviceAgreementId: ").append(toIndentedString(serviceAgreementId)).append("\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

