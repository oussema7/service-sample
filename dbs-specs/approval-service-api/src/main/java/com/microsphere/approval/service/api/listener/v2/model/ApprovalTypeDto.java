/*
 * Approvals service
 * Other services approve or reject approvals, and update approval types, policies, and policy assignments.
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.approval.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * An approval type, also known as approval level, is used to allow a hierarchy of approvals to grant to various users or groups to allow complex policies to be defined.
 */
@ApiModel(description = "An approval type, also known as approval level, is used to allow a hierarchy of approvals to grant to various users or groups to allow complex policies to be defined.")
@JsonPropertyOrder({
  ApprovalTypeDto.JSON_PROPERTY_ID,
  ApprovalTypeDto.JSON_PROPERTY_NAME,
  ApprovalTypeDto.JSON_PROPERTY_DESCRIPTION,
  ApprovalTypeDto.JSON_PROPERTY_RANK,
  ApprovalTypeDto.JSON_PROPERTY_ADDITIONS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:49.266495+01:00[Africa/Tunis]")
public  class ApprovalTypeDto {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_RANK = "rank";
  private Integer rank;

  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;


  public ApprovalTypeDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Universal Unique Identifier, 
   * @return id
  **/
  @NotNull
 @Pattern(regexp="^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[1-5][0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$")  @ApiModelProperty(required = true, value = "Universal Unique Identifier, ")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ApprovalTypeDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of an item.
   * @return name
  **/
  @NotNull
 @Size(max=50)  @ApiModelProperty(required = true, value = "The name of an item.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApprovalTypeDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * This gives a more in detailed description of the item and its purpose.
   * @return description
  **/
  @javax.annotation.Nullable
 @Size(max=255)  @ApiModelProperty(value = "This gives a more in detailed description of the item and its purpose.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApprovalTypeDto rank(Integer rank) {
    
    this.rank = rank;
    return this;
  }

   /**
   * The rank determines which item takes precedence over another. 1 means highest precedence and 100 takes lower precedence than 10. Must be unique!
   * minimum: 1
   * @return rank
  **/
  @NotNull
 @Min(1)  @ApiModelProperty(required = true, value = "The rank determines which item takes precedence over another. 1 means highest precedence and 100 takes lower precedence than 10. Must be unique!")
  @JsonProperty(JSON_PROPERTY_RANK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRank() {
    return rank;
  }


  public void setRank(Integer rank) {
    this.rank = rank;
  }


  public ApprovalTypeDto additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public ApprovalTypeDto putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Additional properties
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional properties")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApprovalTypeDto approvalTypeDto = (ApprovalTypeDto) o;
    return Objects.equals(this.id, approvalTypeDto.id) &&
        Objects.equals(this.name, approvalTypeDto.name) &&
        Objects.equals(this.description, approvalTypeDto.description) &&
        Objects.equals(this.rank, approvalTypeDto.rank) &&
        Objects.equals(this.additions, approvalTypeDto.additions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, rank, additions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApprovalTypeDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

