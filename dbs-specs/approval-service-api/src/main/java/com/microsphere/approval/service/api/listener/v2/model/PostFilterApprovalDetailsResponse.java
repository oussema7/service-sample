/*
 * Approvals service
 * Other services approve or reject approvals, and update approval types, policies, and policy assignments.
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.approval.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.approval.service.api.listener.v2.model.PresentationApprovalDetailDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Result of getting the approval details.
 */
@ApiModel(description = "Result of getting the approval details.")
@JsonPropertyOrder({
  PostFilterApprovalDetailsResponse.JSON_PROPERTY_APPROVAL_DETAILS,
  PostFilterApprovalDetailsResponse.JSON_PROPERTY_ADDITIONS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:49.266495+01:00[Africa/Tunis]")
public  class PostFilterApprovalDetailsResponse {
  public static final String JSON_PROPERTY_APPROVAL_DETAILS = "approvalDetails";
  private PresentationApprovalDetailDto approvalDetails;

  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;


  public PostFilterApprovalDetailsResponse approvalDetails(PresentationApprovalDetailDto approvalDetails) {
    
    this.approvalDetails = approvalDetails;
    return this;
  }

   /**
   * Get approvalDetails
   * @return approvalDetails
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_APPROVAL_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PresentationApprovalDetailDto getApprovalDetails() {
    return approvalDetails;
  }


  public void setApprovalDetails(PresentationApprovalDetailDto approvalDetails) {
    this.approvalDetails = approvalDetails;
  }


  public PostFilterApprovalDetailsResponse additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public PostFilterApprovalDetailsResponse putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Additional properties
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional properties")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostFilterApprovalDetailsResponse postFilterApprovalDetailsResponse = (PostFilterApprovalDetailsResponse) o;
    return Objects.equals(this.approvalDetails, postFilterApprovalDetailsResponse.approvalDetails) &&
        Objects.equals(this.additions, postFilterApprovalDetailsResponse.additions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvalDetails, additions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostFilterApprovalDetailsResponse {\n");
    sb.append("    approvalDetails: ").append(toIndentedString(approvalDetails)).append("\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

