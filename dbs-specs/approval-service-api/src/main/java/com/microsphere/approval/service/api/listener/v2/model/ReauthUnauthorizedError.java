/*
 * Approvals service
 * Other services approve or reject approvals, and update approval types, policies, and policy assignments.
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.approval.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * ReauthUnauthorizedError
 */
@JsonPropertyOrder({
  ReauthUnauthorizedError.JSON_PROPERTY_CHALLENGES,
  ReauthUnauthorizedError.JSON_PROPERTY_DATA
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:49.266495+01:00[Africa/Tunis]")
public  class ReauthUnauthorizedError {
  public static final String JSON_PROPERTY_CHALLENGES = "challenges";
  private List<Map<String, String>> challenges = null;

  public static final String JSON_PROPERTY_DATA = "data";
  private Map<String, String> data = null;


  public ReauthUnauthorizedError challenges(List<Map<String, String>> challenges) {
    
    this.challenges = challenges;
    return this;
  }

  public ReauthUnauthorizedError addChallengesItem(Map<String, String> challengesItem) {
    if (this.challenges == null) {
      this.challenges = new ArrayList<>();
    }
    this.challenges.add(challengesItem);
    return this;
  }

   /**
   * Get challenges
   * @return challenges
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHALLENGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Map<String, String>> getChallenges() {
    return challenges;
  }


  public void setChallenges(List<Map<String, String>> challenges) {
    this.challenges = challenges;
  }


  public ReauthUnauthorizedError data(Map<String, String> data) {
    
    this.data = data;
    return this;
  }

  public ReauthUnauthorizedError putDataItem(String key, String dataItem) {
    if (this.data == null) {
      this.data = new HashMap<>();
    }
    this.data.put(key, dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getData() {
    return data;
  }


  public void setData(Map<String, String> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReauthUnauthorizedError reauthUnauthorizedError = (ReauthUnauthorizedError) o;
    return Objects.equals(this.challenges, reauthUnauthorizedError.challenges) &&
        Objects.equals(this.data, reauthUnauthorizedError.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challenges, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReauthUnauthorizedError {\n");
    sb.append("    challenges: ").append(toIndentedString(challenges)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

