/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrol.service.api.listener.v2.model.LegalEntityCreateItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * LegalEntityPut
 */
@JsonPropertyOrder({
  LegalEntityPut.JSON_PROPERTY_LEGAL_ENTITY,
  LegalEntityPut.JSON_PROPERTY_EXTERNAL_ID
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class LegalEntityPut {
  public static final String JSON_PROPERTY_LEGAL_ENTITY = "legalEntity";
  private LegalEntityCreateItem legalEntity;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;


  public LegalEntityPut legalEntity(LegalEntityCreateItem legalEntity) {
    
    this.legalEntity = legalEntity;
    return this;
  }

   /**
   * Get legalEntity
   * @return legalEntity
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LEGAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LegalEntityCreateItem getLegalEntity() {
    return legalEntity;
  }


  public void setLegalEntity(LegalEntityCreateItem legalEntity) {
    this.legalEntity = legalEntity;
  }


  public LegalEntityPut externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * External legal entity identifier.
   * @return externalId
  **/
  @NotNull
 @Pattern(regexp="^[^\\r\\n]{1,64}$") @Size(min=1,max=64)  @ApiModelProperty(required = true, value = "External legal entity identifier.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegalEntityPut legalEntityPut = (LegalEntityPut) o;
    return Objects.equals(this.legalEntity, legalEntityPut.legalEntity) &&
        Objects.equals(this.externalId, legalEntityPut.externalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(legalEntity, externalId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegalEntityPut {\n");
    sb.append("    legalEntity: ").append(toIndentedString(legalEntity)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

