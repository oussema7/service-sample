/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrol.service.api.listener.v2.model.PresentationDataGroupApprovalItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Function Groups and Data Groups Pairs.
 */
@ApiModel(description = "Function Groups and Data Groups Pairs.")
@JsonPropertyOrder({
  PresentationFunctionGroupsDataGroupsPair.JSON_PROPERTY_ID,
  PresentationFunctionGroupsDataGroupsPair.JSON_PROPERTY_NAME,
  PresentationFunctionGroupsDataGroupsPair.JSON_PROPERTY_DESCRIPTION,
  PresentationFunctionGroupsDataGroupsPair.JSON_PROPERTY_TYPE,
  PresentationFunctionGroupsDataGroupsPair.JSON_PROPERTY_DATA_GROUPS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class PresentationFunctionGroupsDataGroupsPair {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    REGULAR("REGULAR"),
    
    TEMPLATE("TEMPLATE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_DATA_GROUPS = "dataGroups";
  private List<PresentationDataGroupApprovalItem> dataGroups = null;


  public PresentationFunctionGroupsDataGroupsPair id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Universally Unique Identifier.
   * @return id
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[0-9a-f]{32}$|^[0-9a-f-]{36}$")  @ApiModelProperty(value = "Universally Unique Identifier.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public PresentationFunctionGroupsDataGroupsPair name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of function group
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of function group")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PresentationFunctionGroupsDataGroupsPair description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of function group
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of function group")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PresentationFunctionGroupsDataGroupsPair type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PresentationFunctionGroupsDataGroupsPair dataGroups(List<PresentationDataGroupApprovalItem> dataGroups) {
    
    this.dataGroups = dataGroups;
    return this;
  }

  public PresentationFunctionGroupsDataGroupsPair addDataGroupsItem(PresentationDataGroupApprovalItem dataGroupsItem) {
    if (this.dataGroups == null) {
      this.dataGroups = new ArrayList<>();
    }
    this.dataGroups.add(dataGroupsItem);
    return this;
  }

   /**
   * Get dataGroups
   * @return dataGroups
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PresentationDataGroupApprovalItem> getDataGroups() {
    return dataGroups;
  }


  public void setDataGroups(List<PresentationDataGroupApprovalItem> dataGroups) {
    this.dataGroups = dataGroups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PresentationFunctionGroupsDataGroupsPair presentationFunctionGroupsDataGroupsPair = (PresentationFunctionGroupsDataGroupsPair) o;
    return Objects.equals(this.id, presentationFunctionGroupsDataGroupsPair.id) &&
        Objects.equals(this.name, presentationFunctionGroupsDataGroupsPair.name) &&
        Objects.equals(this.description, presentationFunctionGroupsDataGroupsPair.description) &&
        Objects.equals(this.type, presentationFunctionGroupsDataGroupsPair.type) &&
        Objects.equals(this.dataGroups, presentationFunctionGroupsDataGroupsPair.dataGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, type, dataGroups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PresentationFunctionGroupsDataGroupsPair {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    dataGroups: ").append(toIndentedString(dataGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

