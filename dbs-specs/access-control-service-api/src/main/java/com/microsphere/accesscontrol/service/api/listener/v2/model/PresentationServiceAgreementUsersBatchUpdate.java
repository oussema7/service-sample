/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrol.service.api.listener.v2.model.PresentationAction;
import com.microsphere.accesscontrol.service.api.listener.v2.model.PresentationServiceAgreementUserPair;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Payload for batch adding or removing admins/users to service agreement
 */
@ApiModel(description = "Payload for batch adding or removing admins/users to service agreement")
@JsonPropertyOrder({
  PresentationServiceAgreementUsersBatchUpdate.JSON_PROPERTY_ACTION,
  PresentationServiceAgreementUsersBatchUpdate.JSON_PROPERTY_USERS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class PresentationServiceAgreementUsersBatchUpdate {
  public static final String JSON_PROPERTY_ACTION = "action";
  private PresentationAction action;

  public static final String JSON_PROPERTY_USERS = "users";
  private List<PresentationServiceAgreementUserPair> users = null;


  public PresentationServiceAgreementUsersBatchUpdate action(PresentationAction action) {
    
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PresentationAction getAction() {
    return action;
  }


  public void setAction(PresentationAction action) {
    this.action = action;
  }


  public PresentationServiceAgreementUsersBatchUpdate users(List<PresentationServiceAgreementUserPair> users) {
    
    this.users = users;
    return this;
  }

  public PresentationServiceAgreementUsersBatchUpdate addUsersItem(PresentationServiceAgreementUserPair usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @Valid
 @Size(min=1)  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PresentationServiceAgreementUserPair> getUsers() {
    return users;
  }


  public void setUsers(List<PresentationServiceAgreementUserPair> users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PresentationServiceAgreementUsersBatchUpdate presentationServiceAgreementUsersBatchUpdate = (PresentationServiceAgreementUsersBatchUpdate) o;
    return Objects.equals(this.action, presentationServiceAgreementUsersBatchUpdate.action) &&
        Objects.equals(this.users, presentationServiceAgreementUsersBatchUpdate.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PresentationServiceAgreementUsersBatchUpdate {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

