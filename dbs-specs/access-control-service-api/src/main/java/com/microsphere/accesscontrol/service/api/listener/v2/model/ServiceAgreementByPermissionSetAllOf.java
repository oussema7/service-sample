/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * ServiceAgreementByPermissionSetAllOf
 */
@JsonPropertyOrder({
  ServiceAgreementByPermissionSetAllOf.JSON_PROPERTY_ID,
  ServiceAgreementByPermissionSetAllOf.JSON_PROPERTY_EXTERNAL_ID,
  ServiceAgreementByPermissionSetAllOf.JSON_PROPERTY_NAME,
  ServiceAgreementByPermissionSetAllOf.JSON_PROPERTY_IS_MASTER,
  ServiceAgreementByPermissionSetAllOf.JSON_PROPERTY_REGULAR_USER_APS,
  ServiceAgreementByPermissionSetAllOf.JSON_PROPERTY_ADMIN_USER_APS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class ServiceAgreementByPermissionSetAllOf {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IS_MASTER = "isMaster";
  private Boolean isMaster;

  public static final String JSON_PROPERTY_REGULAR_USER_APS = "regularUserAps";
  private List<BigDecimal> regularUserAps = null;

  public static final String JSON_PROPERTY_ADMIN_USER_APS = "adminUserAps";
  private List<BigDecimal> adminUserAps = null;


  public ServiceAgreementByPermissionSetAllOf id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Service agreement internal id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Service agreement internal id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ServiceAgreementByPermissionSetAllOf externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Service agreement external id
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Service agreement external id")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public ServiceAgreementByPermissionSetAllOf name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Service agreement name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Service agreement name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ServiceAgreementByPermissionSetAllOf isMaster(Boolean isMaster) {
    
    this.isMaster = isMaster;
    return this;
  }

   /**
   * Is Service agreement master
   * @return isMaster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is Service agreement master")
  @JsonProperty(JSON_PROPERTY_IS_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsMaster() {
    return isMaster;
  }


  public void setIsMaster(Boolean isMaster) {
    this.isMaster = isMaster;
  }


  public ServiceAgreementByPermissionSetAllOf regularUserAps(List<BigDecimal> regularUserAps) {
    
    this.regularUserAps = regularUserAps;
    return this;
  }

  public ServiceAgreementByPermissionSetAllOf addRegularUserApsItem(BigDecimal regularUserApsItem) {
    if (this.regularUserAps == null) {
      this.regularUserAps = new ArrayList<>();
    }
    this.regularUserAps.add(regularUserApsItem);
    return this;
  }

   /**
   * Assigned permission set ids assigned to service agreement as regular user
   * @return regularUserAps
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Assigned permission set ids assigned to service agreement as regular user")
  @JsonProperty(JSON_PROPERTY_REGULAR_USER_APS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BigDecimal> getRegularUserAps() {
    return regularUserAps;
  }


  public void setRegularUserAps(List<BigDecimal> regularUserAps) {
    this.regularUserAps = regularUserAps;
  }


  public ServiceAgreementByPermissionSetAllOf adminUserAps(List<BigDecimal> adminUserAps) {
    
    this.adminUserAps = adminUserAps;
    return this;
  }

  public ServiceAgreementByPermissionSetAllOf addAdminUserApsItem(BigDecimal adminUserApsItem) {
    if (this.adminUserAps == null) {
      this.adminUserAps = new ArrayList<>();
    }
    this.adminUserAps.add(adminUserApsItem);
    return this;
  }

   /**
   * Assigned permission set ids assigned to service agreement as admin user
   * @return adminUserAps
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Assigned permission set ids assigned to service agreement as admin user")
  @JsonProperty(JSON_PROPERTY_ADMIN_USER_APS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BigDecimal> getAdminUserAps() {
    return adminUserAps;
  }


  public void setAdminUserAps(List<BigDecimal> adminUserAps) {
    this.adminUserAps = adminUserAps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceAgreementByPermissionSetAllOf serviceAgreementByPermissionSetAllOf = (ServiceAgreementByPermissionSetAllOf) o;
    return Objects.equals(this.id, serviceAgreementByPermissionSetAllOf.id) &&
        Objects.equals(this.externalId, serviceAgreementByPermissionSetAllOf.externalId) &&
        Objects.equals(this.name, serviceAgreementByPermissionSetAllOf.name) &&
        Objects.equals(this.isMaster, serviceAgreementByPermissionSetAllOf.isMaster) &&
        Objects.equals(this.regularUserAps, serviceAgreementByPermissionSetAllOf.regularUserAps) &&
        Objects.equals(this.adminUserAps, serviceAgreementByPermissionSetAllOf.adminUserAps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, externalId, name, isMaster, regularUserAps, adminUserAps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceAgreementByPermissionSetAllOf {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isMaster: ").append(toIndentedString(isMaster)).append("\n");
    sb.append("    regularUserAps: ").append(toIndentedString(regularUserAps)).append("\n");
    sb.append("    adminUserAps: ").append(toIndentedString(adminUserAps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

