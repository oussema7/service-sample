/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrol.service.api.listener.v2.model.PresentationPermission;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * PresentationIngestFunctionGroupAllOf
 */
@JsonPropertyOrder({
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_NAME,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_DESCRIPTION,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_EXTERNAL_SERVICE_AGREEMENT_ID,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_PERMISSIONS,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_VALID_FROM_DATE,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_VALID_FROM_TIME,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_VALID_UNTIL_DATE,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_VALID_UNTIL_TIME,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_APS_ID,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_APS_NAME,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_TYPE,
  PresentationIngestFunctionGroupAllOf.JSON_PROPERTY_METADATA
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class PresentationIngestFunctionGroupAllOf {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EXTERNAL_SERVICE_AGREEMENT_ID = "externalServiceAgreementId";
  private String externalServiceAgreementId;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  private List<PresentationPermission> permissions = null;

  public static final String JSON_PROPERTY_VALID_FROM_DATE = "validFromDate";
  private String validFromDate;

  public static final String JSON_PROPERTY_VALID_FROM_TIME = "validFromTime";
  private String validFromTime;

  public static final String JSON_PROPERTY_VALID_UNTIL_DATE = "validUntilDate";
  private String validUntilDate;

  public static final String JSON_PROPERTY_VALID_UNTIL_TIME = "validUntilTime";
  private String validUntilTime;

  public static final String JSON_PROPERTY_APS_ID = "apsId";
  private BigDecimal apsId;

  public static final String JSON_PROPERTY_APS_NAME = "apsName";
  private String apsName;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    REGULAR("REGULAR"),
    
    TEMPLATE("TEMPLATE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type = TypeEnum.REGULAR;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Map<String, String> metadata = null;


  public PresentationIngestFunctionGroupAllOf name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Function group name
   * @return name
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^\\S(.*(\\S))?$") @Size(min=1,max=128)  @ApiModelProperty(value = "Function group name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PresentationIngestFunctionGroupAllOf description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Function group description
   * @return description
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^\\S(.*(\\S))?$") @Size(min=1,max=255)  @ApiModelProperty(value = "Function group description")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PresentationIngestFunctionGroupAllOf externalServiceAgreementId(String externalServiceAgreementId) {
    
    this.externalServiceAgreementId = externalServiceAgreementId;
    return this;
  }

   /**
   * External Unique Identifier.
   * @return externalServiceAgreementId
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[^\\r\\n]{1,64}$") @Size(min=1,max=64)  @ApiModelProperty(value = "External Unique Identifier.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_SERVICE_AGREEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalServiceAgreementId() {
    return externalServiceAgreementId;
  }


  public void setExternalServiceAgreementId(String externalServiceAgreementId) {
    this.externalServiceAgreementId = externalServiceAgreementId;
  }


  public PresentationIngestFunctionGroupAllOf permissions(List<PresentationPermission> permissions) {
    
    this.permissions = permissions;
    return this;
  }

  public PresentationIngestFunctionGroupAllOf addPermissionsItem(PresentationPermission permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PresentationPermission> getPermissions() {
    return permissions;
  }


  public void setPermissions(List<PresentationPermission> permissions) {
    this.permissions = permissions;
  }


  public PresentationIngestFunctionGroupAllOf validFromDate(String validFromDate) {
    
    this.validFromDate = validFromDate;
    return this;
  }

   /**
   * Start date of the function group.
   * @return validFromDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start date of the function group.")
  @JsonProperty(JSON_PROPERTY_VALID_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidFromDate() {
    return validFromDate;
  }


  public void setValidFromDate(String validFromDate) {
    this.validFromDate = validFromDate;
  }


  public PresentationIngestFunctionGroupAllOf validFromTime(String validFromTime) {
    
    this.validFromTime = validFromTime;
    return this;
  }

   /**
   * Start time of the function group.
   * @return validFromTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start time of the function group.")
  @JsonProperty(JSON_PROPERTY_VALID_FROM_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidFromTime() {
    return validFromTime;
  }


  public void setValidFromTime(String validFromTime) {
    this.validFromTime = validFromTime;
  }


  public PresentationIngestFunctionGroupAllOf validUntilDate(String validUntilDate) {
    
    this.validUntilDate = validUntilDate;
    return this;
  }

   /**
   * End date of the function group.
   * @return validUntilDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End date of the function group.")
  @JsonProperty(JSON_PROPERTY_VALID_UNTIL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidUntilDate() {
    return validUntilDate;
  }


  public void setValidUntilDate(String validUntilDate) {
    this.validUntilDate = validUntilDate;
  }


  public PresentationIngestFunctionGroupAllOf validUntilTime(String validUntilTime) {
    
    this.validUntilTime = validUntilTime;
    return this;
  }

   /**
   * End time of the function group.
   * @return validUntilTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End time of the function group.")
  @JsonProperty(JSON_PROPERTY_VALID_UNTIL_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidUntilTime() {
    return validUntilTime;
  }


  public void setValidUntilTime(String validUntilTime) {
    this.validUntilTime = validUntilTime;
  }


  public PresentationIngestFunctionGroupAllOf apsId(BigDecimal apsId) {
    
    this.apsId = apsId;
    return this;
  }

   /**
   * Assignable Permission Set Id
   * @return apsId
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Assignable Permission Set Id")
  @JsonProperty(JSON_PROPERTY_APS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getApsId() {
    return apsId;
  }


  public void setApsId(BigDecimal apsId) {
    this.apsId = apsId;
  }


  public PresentationIngestFunctionGroupAllOf apsName(String apsName) {
    
    this.apsName = apsName;
    return this;
  }

   /**
   * Assignable Permission Set name
   * @return apsName
  **/
  @javax.annotation.Nullable
 @Size(max=128)  @ApiModelProperty(value = "Assignable Permission Set name")
  @JsonProperty(JSON_PROPERTY_APS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApsName() {
    return apsName;
  }


  public void setApsName(String apsName) {
    this.apsName = apsName;
  }


  public PresentationIngestFunctionGroupAllOf type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PresentationIngestFunctionGroupAllOf metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public PresentationIngestFunctionGroupAllOf putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Metadata for specific entities. Do not use it for custom extensions. Use additions instead.
   * @return metadata
  **/
  @javax.annotation.Nullable
 @Size(min=0,max=10)  @ApiModelProperty(value = "Metadata for specific entities. Do not use it for custom extensions. Use additions instead.")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PresentationIngestFunctionGroupAllOf presentationIngestFunctionGroupAllOf = (PresentationIngestFunctionGroupAllOf) o;
    return Objects.equals(this.name, presentationIngestFunctionGroupAllOf.name) &&
        Objects.equals(this.description, presentationIngestFunctionGroupAllOf.description) &&
        Objects.equals(this.externalServiceAgreementId, presentationIngestFunctionGroupAllOf.externalServiceAgreementId) &&
        Objects.equals(this.permissions, presentationIngestFunctionGroupAllOf.permissions) &&
        Objects.equals(this.validFromDate, presentationIngestFunctionGroupAllOf.validFromDate) &&
        Objects.equals(this.validFromTime, presentationIngestFunctionGroupAllOf.validFromTime) &&
        Objects.equals(this.validUntilDate, presentationIngestFunctionGroupAllOf.validUntilDate) &&
        Objects.equals(this.validUntilTime, presentationIngestFunctionGroupAllOf.validUntilTime) &&
        Objects.equals(this.apsId, presentationIngestFunctionGroupAllOf.apsId) &&
        Objects.equals(this.apsName, presentationIngestFunctionGroupAllOf.apsName) &&
        Objects.equals(this.type, presentationIngestFunctionGroupAllOf.type) &&
        Objects.equals(this.metadata, presentationIngestFunctionGroupAllOf.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, externalServiceAgreementId, permissions, validFromDate, validFromTime, validUntilDate, validUntilTime, apsId, apsName, type, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PresentationIngestFunctionGroupAllOf {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    externalServiceAgreementId: ").append(toIndentedString(externalServiceAgreementId)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    validFromDate: ").append(toIndentedString(validFromDate)).append("\n");
    sb.append("    validFromTime: ").append(toIndentedString(validFromTime)).append("\n");
    sb.append("    validUntilDate: ").append(toIndentedString(validUntilDate)).append("\n");
    sb.append("    validUntilTime: ").append(toIndentedString(validUntilTime)).append("\n");
    sb.append("    apsId: ").append(toIndentedString(apsId)).append("\n");
    sb.append("    apsName: ").append(toIndentedString(apsName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

