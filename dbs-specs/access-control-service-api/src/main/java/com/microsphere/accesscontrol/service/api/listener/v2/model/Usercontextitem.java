/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrol.service.api.listener.v2.model.AdditionalPropertiesAware;
import com.microsphere.accesscontrol.service.api.listener.v2.model.UsercontextitemAllOf;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * Context Service Agreement item
 */
@ApiModel(description = "Context Service Agreement item")
@JsonPropertyOrder({
  Usercontextitem.JSON_PROPERTY_ADDITIONS,
  Usercontextitem.JSON_PROPERTY_SERVICE_AGREEMENT_NAME,
  Usercontextitem.JSON_PROPERTY_SERVICE_AGREEMENT_ID,
  Usercontextitem.JSON_PROPERTY_SERVICE_AGREEMENT_MASTER,
  Usercontextitem.JSON_PROPERTY_EXTERNAL_ID,
  Usercontextitem.JSON_PROPERTY_DESCRIPTION
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class Usercontextitem {
  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENT_NAME = "serviceAgreementName";
  private String serviceAgreementName;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENT_ID = "serviceAgreementId";
  private String serviceAgreementId;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENT_MASTER = "serviceAgreementMaster";
  private Boolean serviceAgreementMaster;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;


  public Usercontextitem additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public Usercontextitem putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Get additions
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  public Usercontextitem serviceAgreementName(String serviceAgreementName) {
    
    this.serviceAgreementName = serviceAgreementName;
    return this;
  }

   /**
   * Service Agreement name
   * @return serviceAgreementName
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Service Agreement name")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceAgreementName() {
    return serviceAgreementName;
  }


  public void setServiceAgreementName(String serviceAgreementName) {
    this.serviceAgreementName = serviceAgreementName;
  }


  public Usercontextitem serviceAgreementId(String serviceAgreementId) {
    
    this.serviceAgreementId = serviceAgreementId;
    return this;
  }

   /**
   * Universally Unique Identifier.
   * @return serviceAgreementId
  **/
  @NotNull
 @Pattern(regexp="^[0-9a-f]{32}$|^[0-9a-f-]{36}$")  @ApiModelProperty(required = true, value = "Universally Unique Identifier.")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceAgreementId() {
    return serviceAgreementId;
  }


  public void setServiceAgreementId(String serviceAgreementId) {
    this.serviceAgreementId = serviceAgreementId;
  }


  public Usercontextitem serviceAgreementMaster(Boolean serviceAgreementMaster) {
    
    this.serviceAgreementMaster = serviceAgreementMaster;
    return this;
  }

   /**
   * Service Agreement Master
   * @return serviceAgreementMaster
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Service Agreement Master")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENT_MASTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getServiceAgreementMaster() {
    return serviceAgreementMaster;
  }


  public void setServiceAgreementMaster(Boolean serviceAgreementMaster) {
    this.serviceAgreementMaster = serviceAgreementMaster;
  }


  public Usercontextitem externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * External Unique Identifier.
   * @return externalId
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[^\\r\\n]{1,64}$") @Size(min=1,max=64)  @ApiModelProperty(value = "External Unique Identifier.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public Usercontextitem description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Brief text to describe service agreement
   * @return description
  **/
  @javax.annotation.Nullable
 @Size(min=1,max=255)  @ApiModelProperty(value = "Brief text to describe service agreement")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Usercontextitem usercontextitem = (Usercontextitem) o;
    return Objects.equals(this.additions, usercontextitem.additions) &&
        Objects.equals(this.serviceAgreementName, usercontextitem.serviceAgreementName) &&
        Objects.equals(this.serviceAgreementId, usercontextitem.serviceAgreementId) &&
        Objects.equals(this.serviceAgreementMaster, usercontextitem.serviceAgreementMaster) &&
        Objects.equals(this.externalId, usercontextitem.externalId) &&
        Objects.equals(this.description, usercontextitem.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additions, serviceAgreementName, serviceAgreementId, serviceAgreementMaster, externalId, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Usercontextitem {\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("    serviceAgreementName: ").append(toIndentedString(serviceAgreementName)).append("\n");
    sb.append("    serviceAgreementId: ").append(toIndentedString(serviceAgreementId)).append("\n");
    sb.append("    serviceAgreementMaster: ").append(toIndentedString(serviceAgreementMaster)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

