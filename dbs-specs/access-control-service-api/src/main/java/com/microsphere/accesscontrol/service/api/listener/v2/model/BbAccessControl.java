/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * BbAccessControl
 */
@JsonPropertyOrder({
  BbAccessControl.JSON_PROPERTY_RESOURCE,
  BbAccessControl.JSON_PROPERTY_FUNCTION,
  BbAccessControl.JSON_PROPERTY_PRIVILEGE
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class BbAccessControl {
  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private String resource;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_PRIVILEGE = "privilege";
  private String privilege;


  public BbAccessControl resource(String resource) {
    
    this.resource = resource;
    return this;
  }

   /**
   * Resource being protected, e.g. &#39;User&#39;
   * @return resource
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Resource being protected, e.g. 'User'")
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResource() {
    return resource;
  }


  public void setResource(String resource) {
    this.resource = resource;
  }


  public BbAccessControl function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Business function, e.g. &#39;Manage Users&#39;
   * @return function
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Business function, e.g. 'Manage Users'")
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFunction() {
    return function;
  }


  public void setFunction(String function) {
    this.function = function;
  }


  public BbAccessControl privilege(String privilege) {
    
    this.privilege = privilege;
    return this;
  }

   /**
   * The privilege required, e.g. &#39;view&#39;
   * @return privilege
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The privilege required, e.g. 'view'")
  @JsonProperty(JSON_PROPERTY_PRIVILEGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPrivilege() {
    return privilege;
  }


  public void setPrivilege(String privilege) {
    this.privilege = privilege;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BbAccessControl bbAccessControl = (BbAccessControl) o;
    return Objects.equals(this.resource, bbAccessControl.resource) &&
        Objects.equals(this.function, bbAccessControl.function) &&
        Objects.equals(this.privilege, bbAccessControl.privilege);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, function, privilege);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BbAccessControl {\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    privilege: ").append(toIndentedString(privilege)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

