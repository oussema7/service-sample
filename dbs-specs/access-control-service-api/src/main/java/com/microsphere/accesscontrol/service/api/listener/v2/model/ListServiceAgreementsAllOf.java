/*
 * Access Control service API
 * Manage user permissions, data groups, function groups and service agreements from service to service side
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrol.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrol.service.api.listener.v2.model.PersistenceServiceAgreement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * ListServiceAgreementsAllOf
 */
@JsonPropertyOrder({
  ListServiceAgreementsAllOf.JSON_PROPERTY_TOTAL_ELEMENTS,
  ListServiceAgreementsAllOf.JSON_PROPERTY_SERVICE_AGREEMENTS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:27.444046600+01:00[Africa/Tunis]")
public  class ListServiceAgreementsAllOf {
  public static final String JSON_PROPERTY_TOTAL_ELEMENTS = "totalElements";
  private Long totalElements;

  public static final String JSON_PROPERTY_SERVICE_AGREEMENTS = "serviceAgreements";
  private List<PersistenceServiceAgreement> serviceAgreements = null;


  public ListServiceAgreementsAllOf totalElements(Long totalElements) {
    
    this.totalElements = totalElements;
    return this;
  }

   /**
   * total number of elements matching the query
   * @return totalElements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "total number of elements matching the query")
  @JsonProperty(JSON_PROPERTY_TOTAL_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalElements() {
    return totalElements;
  }


  public void setTotalElements(Long totalElements) {
    this.totalElements = totalElements;
  }


  public ListServiceAgreementsAllOf serviceAgreements(List<PersistenceServiceAgreement> serviceAgreements) {
    
    this.serviceAgreements = serviceAgreements;
    return this;
  }

  public ListServiceAgreementsAllOf addServiceAgreementsItem(PersistenceServiceAgreement serviceAgreementsItem) {
    if (this.serviceAgreements == null) {
      this.serviceAgreements = new ArrayList<>();
    }
    this.serviceAgreements.add(serviceAgreementsItem);
    return this;
  }

   /**
   * Get serviceAgreements
   * @return serviceAgreements
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_AGREEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PersistenceServiceAgreement> getServiceAgreements() {
    return serviceAgreements;
  }


  public void setServiceAgreements(List<PersistenceServiceAgreement> serviceAgreements) {
    this.serviceAgreements = serviceAgreements;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListServiceAgreementsAllOf listServiceAgreementsAllOf = (ListServiceAgreementsAllOf) o;
    return Objects.equals(this.totalElements, listServiceAgreementsAllOf.totalElements) &&
        Objects.equals(this.serviceAgreements, listServiceAgreementsAllOf.serviceAgreements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalElements, serviceAgreements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListServiceAgreementsAllOf {\n");
    sb.append("    totalElements: ").append(toIndentedString(totalElements)).append("\n");
    sb.append("    serviceAgreements: ").append(toIndentedString(serviceAgreements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

