/*
 * User Manager service
 * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. 
 *
 * The version of the OpenAPI document: 2.6.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.usermanager.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * GetUsersByLegalEntityIdsRequest
 */
@JsonPropertyOrder({
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_LEGAL_ENTITY_IDS,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_EXCLUDE_IDS,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_QUERY,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_EXTERNAL_ID,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_CURSOR,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_FROM,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_SIZE,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_SORT_ORDER,
  GetUsersByLegalEntityIdsRequest.JSON_PROPERTY_ADDITIONS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:56.279646600+01:00[Africa/Tunis]")
public  class GetUsersByLegalEntityIdsRequest {
  public static final String JSON_PROPERTY_LEGAL_ENTITY_IDS = "legalEntityIds";
  private List<String> legalEntityIds = new ArrayList<>();

  public static final String JSON_PROPERTY_EXCLUDE_IDS = "excludeIds";
  private List<String> excludeIds = null;

  public static final String JSON_PROPERTY_QUERY = "query";
  private String query;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_CURSOR = "cursor";
  private String cursor;

  public static final String JSON_PROPERTY_FROM = "from";
  private Integer from = 0;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size = 10;

  public static final String JSON_PROPERTY_SORT_ORDER = "sortOrder";
  private String sortOrder;

  public static final String JSON_PROPERTY_ADDITIONS = "additions";
  private Map<String, String> additions = null;


  public GetUsersByLegalEntityIdsRequest legalEntityIds(List<String> legalEntityIds) {
    
    this.legalEntityIds = legalEntityIds;
    return this;
  }

  public GetUsersByLegalEntityIdsRequest addLegalEntityIdsItem(String legalEntityIdsItem) {
    this.legalEntityIds.add(legalEntityIdsItem);
    return this;
  }

   /**
   * Get legalEntityIds
   * @return legalEntityIds
  **/
  @NotNull
 @Size(min=1)  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LEGAL_ENTITY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getLegalEntityIds() {
    return legalEntityIds;
  }


  public void setLegalEntityIds(List<String> legalEntityIds) {
    this.legalEntityIds = legalEntityIds;
  }


  public GetUsersByLegalEntityIdsRequest excludeIds(List<String> excludeIds) {
    
    this.excludeIds = excludeIds;
    return this;
  }

  public GetUsersByLegalEntityIdsRequest addExcludeIdsItem(String excludeIdsItem) {
    if (this.excludeIds == null) {
      this.excludeIds = new ArrayList<>();
    }
    this.excludeIds.add(excludeIdsItem);
    return this;
  }

   /**
   * Get excludeIds
   * @return excludeIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExcludeIds() {
    return excludeIds;
  }


  public void setExcludeIds(List<String> excludeIds) {
    this.excludeIds = excludeIds;
  }


  public GetUsersByLegalEntityIdsRequest query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * The search term used to search users. Performs a case insensitive search on users full name, allowing for partial matches
   * @return query
  **/
  @javax.annotation.Nullable
 @Size(min=0,max=255)  @ApiModelProperty(value = "The search term used to search users. Performs a case insensitive search on users full name, allowing for partial matches")
  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public GetUsersByLegalEntityIdsRequest externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * External Id to search for
   * @return externalId
  **/
  @javax.annotation.Nullable
 @Size(min=0,max=64)  @ApiModelProperty(value = "External Id to search for")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public GetUsersByLegalEntityIdsRequest cursor(String cursor) {
    
    this.cursor = cursor;
    return this;
  }

   /**
   * Record UUID. As an alternative to specifying &#39;from&#39;, this allows a search to begin from a specified record
   * @return cursor
  **/
  @javax.annotation.Nullable
 @Size(min=0,max=330)  @ApiModelProperty(value = "Record UUID. As an alternative to specifying 'from', this allows a search to begin from a specified record")
  @JsonProperty(JSON_PROPERTY_CURSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCursor() {
    return cursor;
  }


  public void setCursor(String cursor) {
    this.cursor = cursor;
  }


  public GetUsersByLegalEntityIdsRequest from(Integer from) {
    
    this.from = from;
    return this;
  }

   /**
   * Page Number. Skip over pages of elements by specifying a start value for the query.
   * minimum: 0
   * @return from
  **/
  @javax.annotation.Nullable
 @Min(0)  @ApiModelProperty(value = "Page Number. Skip over pages of elements by specifying a start value for the query.")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFrom() {
    return from;
  }


  public void setFrom(Integer from) {
    this.from = from;
  }


  public GetUsersByLegalEntityIdsRequest size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Query parameter for pagination - number of records that will be shown on the page.
   * minimum: 1
   * @return size
  **/
  @javax.annotation.Nullable
 @Min(1)  @ApiModelProperty(value = "Query parameter for pagination - number of records that will be shown on the page.")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSize() {
    return size;
  }


  public void setSize(Integer size) {
    this.size = size;
  }


  public GetUsersByLegalEntityIdsRequest sortOrder(String sortOrder) {
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Sort order for the service.
   * @return sortOrder
  **/
  @javax.annotation.Nullable
 @Size(min=0,max=255)  @ApiModelProperty(value = "Sort order for the service.")
  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }


  public GetUsersByLegalEntityIdsRequest additions(Map<String, String> additions) {
    
    this.additions = additions;
    return this;
  }

  public GetUsersByLegalEntityIdsRequest putAdditionsItem(String key, String additionsItem) {
    if (this.additions == null) {
      this.additions = new HashMap<>();
    }
    this.additions.put(key, additionsItem);
    return this;
  }

   /**
   * Get additions
   * @return additions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAdditions() {
    return additions;
  }


  public void setAdditions(Map<String, String> additions) {
    this.additions = additions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUsersByLegalEntityIdsRequest getUsersByLegalEntityIdsRequest = (GetUsersByLegalEntityIdsRequest) o;
    return Objects.equals(this.legalEntityIds, getUsersByLegalEntityIdsRequest.legalEntityIds) &&
        Objects.equals(this.excludeIds, getUsersByLegalEntityIdsRequest.excludeIds) &&
        Objects.equals(this.query, getUsersByLegalEntityIdsRequest.query) &&
        Objects.equals(this.externalId, getUsersByLegalEntityIdsRequest.externalId) &&
        Objects.equals(this.cursor, getUsersByLegalEntityIdsRequest.cursor) &&
        Objects.equals(this.from, getUsersByLegalEntityIdsRequest.from) &&
        Objects.equals(this.size, getUsersByLegalEntityIdsRequest.size) &&
        Objects.equals(this.sortOrder, getUsersByLegalEntityIdsRequest.sortOrder) &&
        Objects.equals(this.additions, getUsersByLegalEntityIdsRequest.additions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(legalEntityIds, excludeIds, query, externalId, cursor, from, size, sortOrder, additions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUsersByLegalEntityIdsRequest {\n");
    sb.append("    legalEntityIds: ").append(toIndentedString(legalEntityIds)).append("\n");
    sb.append("    excludeIds: ").append(toIndentedString(excludeIds)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    additions: ").append(toIndentedString(additions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

