/*
 * Legal Entity Ancestor Service API
 * OpenApi Endpoints for managing Legal Entities Ancestors. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */


package com.microsphere.accesscontrolextension.service.api.listener.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.microsphere.accesscontrolextension.service.api.listener.v2.model.GenericObjectId;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * FunctionDataGroupAllOf
 */
@JsonPropertyOrder({
  FunctionDataGroupAllOf.JSON_PROPERTY_FUNCTION_GROUP_ID,
  FunctionDataGroupAllOf.JSON_PROPERTY_DATA_GROUP_IDS
})
@javax.annotation.Generated(value = "com.backbase.oss.codegen.java.BoatJavaCodeGen", date = "2024-11-14T00:08:46.958085800+01:00[Africa/Tunis]")
public  class FunctionDataGroupAllOf {
  public static final String JSON_PROPERTY_FUNCTION_GROUP_ID = "functionGroupId";
  private String functionGroupId;

  public static final String JSON_PROPERTY_DATA_GROUP_IDS = "dataGroupIds";
  private List<GenericObjectId> dataGroupIds = null;


  public FunctionDataGroupAllOf functionGroupId(String functionGroupId) {
    
    this.functionGroupId = functionGroupId;
    return this;
  }

   /**
   * Universally Unique IDentifier.
   * @return functionGroupId
  **/
  @javax.annotation.Nullable
 @Pattern(regexp="^[0-9a-f]{32}$|^[0-9a-f-]{36}$") @Size(min=1,max=36)  @ApiModelProperty(value = "Universally Unique IDentifier.")
  @JsonProperty(JSON_PROPERTY_FUNCTION_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunctionGroupId() {
    return functionGroupId;
  }


  public void setFunctionGroupId(String functionGroupId) {
    this.functionGroupId = functionGroupId;
  }


  public FunctionDataGroupAllOf dataGroupIds(List<GenericObjectId> dataGroupIds) {
    
    this.dataGroupIds = dataGroupIds;
    return this;
  }

  public FunctionDataGroupAllOf addDataGroupIdsItem(GenericObjectId dataGroupIdsItem) {
    if (this.dataGroupIds == null) {
      this.dataGroupIds = new ArrayList<>();
    }
    this.dataGroupIds.add(dataGroupIdsItem);
    return this;
  }

   /**
   * Get dataGroupIds
   * @return dataGroupIds
  **/
  @javax.annotation.Nullable
  @Valid
 @Size(min=0)  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_GROUP_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GenericObjectId> getDataGroupIds() {
    return dataGroupIds;
  }


  public void setDataGroupIds(List<GenericObjectId> dataGroupIds) {
    this.dataGroupIds = dataGroupIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FunctionDataGroupAllOf functionDataGroupAllOf = (FunctionDataGroupAllOf) o;
    return Objects.equals(this.functionGroupId, functionDataGroupAllOf.functionGroupId) &&
        Objects.equals(this.dataGroupIds, functionDataGroupAllOf.dataGroupIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(functionGroupId, dataGroupIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FunctionDataGroupAllOf {\n");
    sb.append("    functionGroupId: ").append(toIndentedString(functionGroupId)).append("\n");
    sb.append("    dataGroupIds: ").append(toIndentedString(dataGroupIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

